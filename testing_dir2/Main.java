import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Objects;
import java.util.Map;
import java.util.Random;
import java.util.HashMap;
import java.util.Optional;
import java.security.NoSuchAlgorithmException;
public class Main {
	public static <K, V> Map<K, V> createMap(List<K> keys, List<V> values) {
        if (keys.size() != values.size()) {
            throw new IllegalArgumentException("The sizes of the input lists must be the same.");
        }

        Map<K, V> map = new HashMap<>();
        for (int i = 0; i < keys.size(); i++) {
            K key = keys.get(i);
            V value = values.get(i);
            map.put(key, value);
        }
        return map;
    }
	public static void test0()  throws NoSuchAlgorithmException {
		Solution s = new Solution();
		SolutionGenerated s2 = new SolutionGenerated();
		List<Boolean> correct = Arrays.asList(
			s.countNums(new ArrayList<>(Arrays.asList(0, 0, 0))) == s2.countNums(new ArrayList<>(Arrays.asList(0, 0, 0))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, 0, 1))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, 0, 1))),
			s.countNums(new ArrayList<>(Arrays.asList(123, -456, 789))) == s2.countNums(new ArrayList<>(Arrays.asList(123, -456, 789))),
			s.countNums(new ArrayList<>(Arrays.asList(0, -1, -20, 30))) == s2.countNums(new ArrayList<>(Arrays.asList(0, -1, -20, 30))),
			s.countNums(new ArrayList<>(Arrays.asList(-10, -11, -12, 13, 14, -20))) == s2.countNums(new ArrayList<>(Arrays.asList(-10, -11, -12, 13, 14, -20))),
			s.countNums(new ArrayList<>(Arrays.asList(123, 456, 789, -987, -654, -321))) == s2.countNums(new ArrayList<>(Arrays.asList(123, 456, 789, -987, -654, -321))),
			s.countNums(new ArrayList<>(Arrays.asList(100, -250, 375, 500, -750))) == s2.countNums(new ArrayList<>(Arrays.asList(100, -250, 375, 500, -750))),
			s.countNums(new ArrayList<>(Arrays.asList(-10, -20, -30, -40))) == s2.countNums(new ArrayList<>(Arrays.asList(-10, -20, -30, -40))),
			s.countNums(new ArrayList<>(Arrays.asList(99, 999, 666, -5555))) == s2.countNums(new ArrayList<>(Arrays.asList(99, 999, 666, -5555))),
			s.countNums(new ArrayList<>(Arrays.asList(101, -202, 303, -404, 505, -606))) == s2.countNums(new ArrayList<>(Arrays.asList(101, -202, 303, -404, 505, -606))),
			s.countNums(new ArrayList<>(Arrays.asList(123, 456, 789, 790, -987, -654))) == s2.countNums(new ArrayList<>(Arrays.asList(123, 456, 789, 790, -987, -654))),
			s.countNums(new ArrayList<>(Arrays.asList(101, 303, -404, -606))) == s2.countNums(new ArrayList<>(Arrays.asList(101, 303, -404, -606))),
			s.countNums(new ArrayList<>(Arrays.asList(-5555, -12, 101, -202, 303, -404, 505, -606))) == s2.countNums(new ArrayList<>(Arrays.asList(-5555, -12, 101, -202, 303, -404, 505, -606))),
			s.countNums(new ArrayList<>(Arrays.asList(100, -250, 375, -750))) == s2.countNums(new ArrayList<>(Arrays.asList(100, -250, 375, -750))),
			s.countNums(new ArrayList<>(Arrays.asList(101, -202, 303, -403, 505, -606))) == s2.countNums(new ArrayList<>(Arrays.asList(101, -202, 303, -403, 505, -606))),
			s.countNums(new ArrayList<>(Arrays.asList(0, -1, -20, 30, 0, -20))) == s2.countNums(new ArrayList<>(Arrays.asList(0, -1, -20, 30, 0, -20))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -20, 30, 0, -20, 0))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -20, 30, 0, -20, 0))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, 0, 1, -1, 0))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, 0, 1, -1, 0))),
			s.countNums(new ArrayList<>(Arrays.asList(0, 666))) == s2.countNums(new ArrayList<>(Arrays.asList(0, 666))),
			s.countNums(new ArrayList<>(Arrays.asList(15, -10, -11, -12, 13, 14, -20))) == s2.countNums(new ArrayList<>(Arrays.asList(15, -10, -11, -12, 13, 14, -20))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -404, 30, 0, -20, 0))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -404, 30, 0, -20, 0))),
			s.countNums(new ArrayList<>(Arrays.asList(99, -250, 375, -750))) == s2.countNums(new ArrayList<>(Arrays.asList(99, -250, 375, -750))),
			s.countNums(new ArrayList<>(Arrays.asList(303, -404, -606))) == s2.countNums(new ArrayList<>(Arrays.asList(303, -404, -606))),
			s.countNums(new ArrayList<>(Arrays.asList(0))) == s2.countNums(new ArrayList<>(Arrays.asList(0))),
			s.countNums(new ArrayList<>(Arrays.asList(303, -405, -405, -606))) == s2.countNums(new ArrayList<>(Arrays.asList(303, -405, -405, -606))),
			s.countNums(new ArrayList<>(Arrays.asList(99, 99, 999, 666, -5555))) == s2.countNums(new ArrayList<>(Arrays.asList(99, 99, 999, 666, -5555))),
			s.countNums(new ArrayList<>(Arrays.asList(99, -250, 375))) == s2.countNums(new ArrayList<>(Arrays.asList(99, -250, 375))),
			s.countNums(new ArrayList<>(Arrays.asList(-2, -20, 30, 0, -20, 0))) == s2.countNums(new ArrayList<>(Arrays.asList(-2, -20, 30, 0, -20, 0))),
			s.countNums(new ArrayList<>(Arrays.asList(101, -987, 303, -404, -606))) == s2.countNums(new ArrayList<>(Arrays.asList(101, -987, 303, -404, -606))),
			s.countNums(new ArrayList<>(Arrays.asList(99, 99, 666, -5554, -5555))) == s2.countNums(new ArrayList<>(Arrays.asList(99, 99, 666, -5554, -5555))),
			s.countNums(new ArrayList<>(Arrays.asList(100, 790, 101, -202, 303, -403, 506, -606))) == s2.countNums(new ArrayList<>(Arrays.asList(100, 790, 101, -202, 303, -403, 506, -606))),
			s.countNums(new ArrayList<>(Arrays.asList(99, 99, 666, -5554, -5555, 99))) == s2.countNums(new ArrayList<>(Arrays.asList(99, 99, 666, -5554, -5555, 99))),
			s.countNums(new ArrayList<>(Arrays.asList(101, -202, 303, 505, -606))) == s2.countNums(new ArrayList<>(Arrays.asList(101, -202, 303, 505, -606))),
			s.countNums(new ArrayList<>(Arrays.asList(-10, 123, -12, 13, 14, -20))) == s2.countNums(new ArrayList<>(Arrays.asList(-10, 123, -12, 13, 14, -20))),
			s.countNums(new ArrayList<>(Arrays.asList(99, 666, -5554, -5555, -5554))) == s2.countNums(new ArrayList<>(Arrays.asList(99, 666, -5554, -5555, -5554))),
			s.countNums(new ArrayList<>(Arrays.asList(101, -202, 303, -403, -606))) == s2.countNums(new ArrayList<>(Arrays.asList(101, -202, 303, -403, -606))),
			s.countNums(new ArrayList<>(Arrays.asList(99, 999, -202, 30, -5555, -202))) == s2.countNums(new ArrayList<>(Arrays.asList(99, 999, -202, 30, -5555, -202))),
			s.countNums(new ArrayList<>(Arrays.asList(101, -202, 303, -404, 505, 302, -606, 302))) == s2.countNums(new ArrayList<>(Arrays.asList(101, -202, 303, -404, 505, 302, -606, 302))),
			s.countNums(new ArrayList<>(Arrays.asList(-10, -11, -12, 0, 14, -20))) == s2.countNums(new ArrayList<>(Arrays.asList(-10, -11, -12, 0, 14, -20))),
			s.countNums(new ArrayList<>(Arrays.asList(-2, -20, 30, 0, 505, -11))) == s2.countNums(new ArrayList<>(Arrays.asList(-2, -20, 30, 0, 505, -11))),
			s.countNums(new ArrayList<>(Arrays.asList(101, 101, -40, 303, -404, -606))) == s2.countNums(new ArrayList<>(Arrays.asList(101, 101, -40, 303, -404, -606))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, 303, 1, -1, 0, 1))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, 303, 1, -1, 0, 1))),
			s.countNums(new ArrayList<>(Arrays.asList(99, 999, -202, 30, -5555, -202, 30))) == s2.countNums(new ArrayList<>(Arrays.asList(99, 999, -202, 30, -5555, -202, 30))),
			s.countNums(new ArrayList<>(Arrays.asList(15, -10, -11, -12, 13, 14))) == s2.countNums(new ArrayList<>(Arrays.asList(15, -10, -11, -12, 13, 14))),
			s.countNums(new ArrayList<>(Arrays.asList(101, -1, -40, 303, -404, -606))) == s2.countNums(new ArrayList<>(Arrays.asList(101, -1, -40, 303, -404, -606))),
			s.countNums(new ArrayList<>(Arrays.asList(123, 456, 789, -987, -654, -5555, -321))) == s2.countNums(new ArrayList<>(Arrays.asList(123, 456, 789, -987, -654, -5555, -321))),
			s.countNums(new ArrayList<>(Arrays.asList(101, 303, -404, 505, -606))) == s2.countNums(new ArrayList<>(Arrays.asList(101, 303, -404, 505, -606))),
			s.countNums(new ArrayList<>(Arrays.asList(-10, -11, 505, 0, 14, -20))) == s2.countNums(new ArrayList<>(Arrays.asList(-10, -11, 505, 0, 14, -20))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -404, 30, 999, -20, 0))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -404, 30, 999, -20, 0))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -404, 30, 999, -20, 0, 0, 999))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -404, 30, 999, -20, 0, 0, 999)))
		);
		if (correct.contains(false)) {
			throw new AssertionError();
		}
	}
	public static void test1()  throws NoSuchAlgorithmException {
		Solution s = new Solution();
		SolutionGenerated s2 = new SolutionGenerated();
		List<Boolean> correct = Arrays.asList(
			s.countNums(new ArrayList<>(Arrays.asList(101, -202, 303, -404, -606))) == s2.countNums(new ArrayList<>(Arrays.asList(101, -202, 303, -404, -606))),
			s.countNums(new ArrayList<>(Arrays.asList(999, 666, -5555))) == s2.countNums(new ArrayList<>(Arrays.asList(999, 666, -5555))),
			s.countNums(new ArrayList<>(Arrays.asList(101, -404, 304, -404, 505, -606))) == s2.countNums(new ArrayList<>(Arrays.asList(101, -404, 304, -404, 505, -606))),
			s.countNums(new ArrayList<>(Arrays.asList(456, 789, 790, -987, -654, 790))) == s2.countNums(new ArrayList<>(Arrays.asList(456, 789, 790, -987, -654, 790))),
			s.countNums(new ArrayList<>(Arrays.asList(0, 0))) == s2.countNums(new ArrayList<>(Arrays.asList(0, 0))),
			s.countNums(new ArrayList<>(Arrays.asList(99, 999, -202, 30, -750, -5555, -202, 30))) == s2.countNums(new ArrayList<>(Arrays.asList(99, 999, -202, 30, -750, -5555, -202, 30))),
			s.countNums(new ArrayList<>(Arrays.asList(101, -202, 303, -403, -606, 101))) == s2.countNums(new ArrayList<>(Arrays.asList(101, -202, 303, -403, -606, 101))),
			s.countNums(new ArrayList<>(Arrays.asList(-405, 303, -405, -405, -606))) == s2.countNums(new ArrayList<>(Arrays.asList(-405, 303, -405, -405, -606))),
			s.countNums(new ArrayList<>(Arrays.asList(101, -11, -202, -606, 505, -606))) == s2.countNums(new ArrayList<>(Arrays.asList(101, -11, -202, -606, 505, -606))),
			s.countNums(new ArrayList<>(Arrays.asList(999, 665, 666, -5555))) == s2.countNums(new ArrayList<>(Arrays.asList(999, 665, 666, -5555))),
			s.countNums(new ArrayList<>(Arrays.asList(123, -456, 789, 123))) == s2.countNums(new ArrayList<>(Arrays.asList(123, -456, 789, 123))),
			s.countNums(new ArrayList<>(Arrays.asList(15, -10, -11, -12, 14, -20))) == s2.countNums(new ArrayList<>(Arrays.asList(15, -10, -11, -12, 14, -20))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -404, 999, 30, 999, -20, 0, 0, 999, 0))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -404, 999, 30, 999, -20, 0, 0, 999, 0))),
			s.countNums(new ArrayList<>(Arrays.asList(123, 456, 789, -987, -654))) == s2.countNums(new ArrayList<>(Arrays.asList(123, 456, 789, -987, -654))),
			s.countNums(new ArrayList<>(Arrays.asList(999, -1, -404, -750, 999, -19, 0))) == s2.countNums(new ArrayList<>(Arrays.asList(999, -1, -404, -750, 999, -19, 0))),
			s.countNums(new ArrayList<>(Arrays.asList(100, -250, 375))) == s2.countNums(new ArrayList<>(Arrays.asList(100, -250, 375))),
			s.countNums(new ArrayList<>(Arrays.asList(99, -250, 375, -750, -750))) == s2.countNums(new ArrayList<>(Arrays.asList(99, -250, 375, -750, -750))),
			s.countNums(new ArrayList<>(Arrays.asList(-251, 99, -250, 375, -750))) == s2.countNums(new ArrayList<>(Arrays.asList(-251, 99, -250, 375, -750))),
			s.countNums(new ArrayList<>(Arrays.asList(99, 999, -202, 30, -5555, -202, 30, -202))) == s2.countNums(new ArrayList<>(Arrays.asList(99, 999, -202, 30, -5555, -202, 30, -202))),
			s.countNums(new ArrayList<>(Arrays.asList(0, 0, 0, 0))) == s2.countNums(new ArrayList<>(Arrays.asList(0, 0, 0, 0))),
			s.countNums(new ArrayList<>(Arrays.asList(15, -10, -11, -12, 14, 14, -20))) == s2.countNums(new ArrayList<>(Arrays.asList(15, -10, -11, -12, 14, 14, -20))),
			s.countNums(new ArrayList<>(Arrays.asList(-10, -11, -12, 13, 14, -20, 14))) == s2.countNums(new ArrayList<>(Arrays.asList(-10, -11, -12, 13, 14, -20, 14))),
			s.countNums(new ArrayList<>(Arrays.asList(-10, 30, -11, 505, 0, 14, -20))) == s2.countNums(new ArrayList<>(Arrays.asList(-10, 30, -11, 505, 0, 14, -20))),
			s.countNums(new ArrayList<>(Arrays.asList(-405, 506, 303, -405, -405, -606))) == s2.countNums(new ArrayList<>(Arrays.asList(-405, 506, 303, -405, -405, -606))),
			s.countNums(new ArrayList<>(Arrays.asList(-405, -456, 303, -405, -405, -606))) == s2.countNums(new ArrayList<>(Arrays.asList(-405, -456, 303, -405, -405, -606))),
			s.countNums(new ArrayList<>(Arrays.asList(99, 999, 666, -5555, 99))) == s2.countNums(new ArrayList<>(Arrays.asList(99, 999, 666, -5555, 99))),
			s.countNums(new ArrayList<>(Arrays.asList(101, -202, 303, -404, 505, -605, 302))) == s2.countNums(new ArrayList<>(Arrays.asList(101, -202, 303, -404, 505, -605, 302))),
			s.countNums(new ArrayList<>(Arrays.asList(-2, -20, 30, 0, -20, 0, -20))) == s2.countNums(new ArrayList<>(Arrays.asList(-2, -20, 30, 0, -20, 0, -20))),
			s.countNums(new ArrayList<>(Arrays.asList(-405, 506, -250, -405, -405, -606))) == s2.countNums(new ArrayList<>(Arrays.asList(-405, 506, -250, -405, -405, -606))),
			s.countNums(new ArrayList<>(Arrays.asList(99, 999, -250, -202, 30, -5555, -202, 30, 999))) == s2.countNums(new ArrayList<>(Arrays.asList(99, 999, -250, -202, 30, -5555, -202, 30, 999))),
			s.countNums(new ArrayList<>(Arrays.asList(-605, 303, -405, -405, -5555, -606, -606))) == s2.countNums(new ArrayList<>(Arrays.asList(-605, 303, -405, -405, -5555, -606, -606))),
			s.countNums(new ArrayList<>(Arrays.asList(456, 789, 789, 790, -987, -654))) == s2.countNums(new ArrayList<>(Arrays.asList(456, 789, 789, 790, -987, -654))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -404, 30, 999, -20, 0, 0, -19, 999))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -404, 30, 999, -20, 0, 0, -19, 999))),
			s.countNums(new ArrayList<>(Arrays.asList(-30))) == s2.countNums(new ArrayList<>(Arrays.asList(-30))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, 0, 1, -1))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, 0, 1, -1))),
			s.countNums(new ArrayList<>(Arrays.asList(101, -11, -202, -606, 666, -606, 666))) == s2.countNums(new ArrayList<>(Arrays.asList(101, -11, -202, -606, 666, -606, 666))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -404, 14, 30, 999, -20, 0, 0, -19, 999))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -404, 14, 30, 999, -20, 0, 0, -19, 999))),
			s.countNums(new ArrayList<>(Arrays.asList(99, 99, 999, 666, -5555, 666))) == s2.countNums(new ArrayList<>(Arrays.asList(99, 99, 999, 666, -5555, 666))),
			s.countNums(new ArrayList<>(Arrays.asList(100, -250, 375, -250))) == s2.countNums(new ArrayList<>(Arrays.asList(100, -250, 375, -250))),
			s.countNums(new ArrayList<>(Arrays.asList(-12, -201, 101, -202, 303, -404, 505, -605, 302))) == s2.countNums(new ArrayList<>(Arrays.asList(-12, -201, 101, -202, 303, -404, 505, -605, 302))),
			s.countNums(new ArrayList<>(Arrays.asList(100, -605, 790, 101, -202, 303, -403, 506, -606))) == s2.countNums(new ArrayList<>(Arrays.asList(100, -605, 790, 101, -202, 303, -403, 506, -606))),
			s.countNums(new ArrayList<>(Arrays.asList(99, -5554, 999, 666, -5555, 99))) == s2.countNums(new ArrayList<>(Arrays.asList(99, -5554, 999, 666, -5555, 99))),
			s.countNums(new ArrayList<>(Arrays.asList(-405, 506, 303, -405, -405, -606, -405))) == s2.countNums(new ArrayList<>(Arrays.asList(-405, 506, 303, -405, -405, -606, -405))),
			s.countNums(new ArrayList<>(Arrays.asList(456, 789, 790, -987, -654))) == s2.countNums(new ArrayList<>(Arrays.asList(456, 789, 790, -987, -654))),
			s.countNums(new ArrayList<>(Arrays.asList(99, -5554, 999, 666, -5555))) == s2.countNums(new ArrayList<>(Arrays.asList(99, -5554, 999, 666, -5555))),
			s.countNums(new ArrayList<>(Arrays.asList(0, 1, -1, 0))) == s2.countNums(new ArrayList<>(Arrays.asList(0, 1, -1, 0))),
			s.countNums(new ArrayList<>(Arrays.asList(123, -456, 789, 789, -456))) == s2.countNums(new ArrayList<>(Arrays.asList(123, -456, 789, 789, -456))),
			s.countNums(new ArrayList<>(Arrays.asList(99, 999, -203, 30, -5555, -202, 30, -202))) == s2.countNums(new ArrayList<>(Arrays.asList(99, 999, -203, 30, -5555, -202, 30, -202))),
			s.countNums(new ArrayList<>(Arrays.asList(999, -202, 30, -5555, -202))) == s2.countNums(new ArrayList<>(Arrays.asList(999, -202, 30, -5555, -202))),
			s.countNums(new ArrayList<>(Arrays.asList(-2, 0))) == s2.countNums(new ArrayList<>(Arrays.asList(-2, 0)))
		);
		if (correct.contains(false)) {
			throw new AssertionError();
		}
	}
	public static void test2()  throws NoSuchAlgorithmException {
		Solution s = new Solution();
		SolutionGenerated s2 = new SolutionGenerated();
		List<Boolean> correct = Arrays.asList(
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, 9))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, 9))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -2, 0, -123456789, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -2, 0, -123456789, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(0, 0, 0, 0, 0, 0, 0, 0, 0, 0))) == s2.countNums(new ArrayList<>(Arrays.asList(0, 0, 0, 0, 0, 0, 0, 0, 0, 0))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, -123456789, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, -123456789, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, 147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, 147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 0))) == s2.countNums(new ArrayList<>(Arrays.asList(0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 0))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, 9, 999999))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, 9, 999999))),
			s.countNums(new ArrayList<>(Arrays.asList(0, 0, 30, 0, 0, 0, 0, 0, 0, 99, 0))) == s2.countNums(new ArrayList<>(Arrays.asList(0, 0, 30, 0, 0, 0, 0, 0, 0, 99, 0))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, 999999, -22222, 3333, -4444, 555, 666, -77, 88, 9, 999999))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, 999999, -22222, 3333, -4444, 555, 666, -77, 88, 9, 999999))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, 88, 9, 999999))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, 88, 9, 999999))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, -987655, 9, -987654))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, -987655, 9, -987654))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, 18))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, 18))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -7770, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -7770, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, 14, -123456, -987654, 11111, 3333, -4444, 555, 666, -77, 88, 9, -987654))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, 14, -123456, -987654, 11111, 3333, -4444, 555, 666, -77, 88, 9, -987654))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, 88, 9, 999999))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, 88, 9, 999999))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, 9, 3333))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, 9, 3333))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -9999, -11, -12, 555, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -9999, -11, -12, 555, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, -987655, 9, -987654, -987654))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, -987655, 9, -987654, -987654))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, 3333, -4444, 666, -77, 88, 9, 999999))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, 3333, -4444, 666, -77, 88, 9, 999999))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, 3333, -4444, 555, 666, -77, 88, 9, 3333))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, 3333, -4444, 555, 666, -77, 88, 9, 3333))),
			s.countNums(new ArrayList<>(Arrays.asList(0, -2, 0, -123456789, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(0, -2, 0, -123456789, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, -10))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, -10))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 1111))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 1111))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, 123456789, -990, -1000, 100, 123, 432, 10, 20, 666, 777, -10000, 123456789, 777, -10))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, 123456789, -990, -1000, 100, 123, 432, 10, 20, 666, 777, -10000, 123456789, 777, -10))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, 3333, -4444, 666, -77, 88, 88))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, 3333, -4444, 666, -77, 88, 88))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, 147483646, 11111, 3333, -4444, 666, -77, 88, 88))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, 147483646, 11111, 3333, -4444, 666, -77, 88, 88))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 10, 30, 666, 777, -10000, 123456789, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 10, 30, 666, 777, -10000, 123456789, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, 554, -45, -990, -1000, 100, -199, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, 554, -45, -990, -1000, 100, -199, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -7770, -5555, 6666, -7777, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -7770, -5555, 6666, -7777, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, 3333, -4444, 555, 666, -77, 88, 9, 3333, 999999))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, 3333, -4444, 555, 666, -77, 88, 9, 3333, 999999))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, -1, -10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, -1, -10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, 123456789, -990, -1000, 100, -5555, 123, 432, 10, 20, 666, 777, -10000, 123456789, 777, -10, -10))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, 123456789, -990, -1000, 100, -5555, 123, 432, 10, 20, 666, 777, -10000, 123456789, 777, -10, -10))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555, 4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555, 4444))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -3331, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -3331, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111)))
		);
		if (correct.contains(false)) {
			throw new AssertionError();
		}
	}
	public static void test3()  throws NoSuchAlgorithmException {
		Solution s = new Solution();
		SolutionGenerated s2 = new SolutionGenerated();
		List<Boolean> correct = Arrays.asList(
			s.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -3331, -5555, 6666, -199, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -3331, -5555, 6666, -199, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 3333, -4444, 555, 666, -77, 88, -987655, 9, -987654))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 3333, -4444, 555, 666, -77, 88, -987655, 9, -987654))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111, 9999))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111, 9999))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 2220, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 2220, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 796, 123456789, -990, -1000, 100, -5555, 123, 432, 10, 20, 666, 777, -10000, 123456789, 777, -10, -10))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 796, 123456789, -990, -1000, 100, -5555, 123, 432, 10, 20, 666, 777, -10000, 123456789, 777, -10, -10))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111, 2219))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111, 2219))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 123))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 123))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, -7770, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, -7770, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111, 999))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111, 999))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111, 2219, 1111))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111, 2219, 1111))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 2220, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 2220, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 777, -10000, 123456789, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 777, -10000, 123456789, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 9999, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555, 4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 9999, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555, 4444))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, 999998, -987655, 9, -987654, -987654))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, 999998, -987655, 9, -987654, -987654))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, 147483646, -147483646, 147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, 147483646, -147483646, 147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, 147483646, -147483646, 147483646, -147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, 147483646, -147483646, 147483646, -147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 88, 30, 777, -10000, 123456789, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 88, 30, 777, -10000, 123456789, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, -7770, -3331, -5555, 6666, -199, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, -7770, -3331, -5555, 6666, -199, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, 3, -987654, 11111, -22222, 3333, -4444, 555, 666, 88, 9, 999999))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, 3, -987654, 11111, -22222, 3333, -4444, 555, 666, 88, 9, 999999))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 9, -99, 99, -999, 999, -9999, -147483646, 9999, -99999, 99999, -1111111, 999))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 9, -99, 99, -999, 999, -9999, -147483646, 9999, -99999, 99999, -1111111, 999))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 147483646, 999999, 14, -123456, -987654, 11111, 3333, -4444, 555, 666, -77, 88, 9, -987654))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 147483646, 999999, 14, -123456, -987654, 11111, 3333, -4444, 555, 666, -77, 88, 9, -987654))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 2, 999999, 3, -987654, 11111, -22222, 3333, -4444, 555, 666, 88, 9, 999999))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 2, 999999, 3, -987654, 11111, -22222, 3333, -4444, 555, 666, 88, 9, 999999))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 88, -147483646, 777, -10000, 123456789, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 88, -147483646, 777, -10000, 123456789, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, 147483646, -147483646, 147483646, -147483646, 147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, 147483646, -147483646, 147483646, -147483646, 147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -11, 19, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -11, 19, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 999999, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, 18))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 999999, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, 18))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, -3332, -3333, 4444, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, -3332, -3333, 4444, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555))),
			s.countNums(new ArrayList<>(Arrays.asList(1, -100, 2, 3, 4, 5, 6, 7, 9, -99, 99, -999, 16, 998, -9999, 9999, -99999, 99999, -1111111, 999))) == s2.countNums(new ArrayList<>(Arrays.asList(1, -100, 2, 3, 4, 5, 6, 7, 9, -99, 99, -999, 16, 998, -9999, 9999, -99999, 99999, -1111111, 999))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 999999, 12, 1000000, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, 18))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 999999, 12, 1000000, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, 18))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -3331, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111, 6660))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -3331, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111, 6660))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, -147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, -147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 9, -99, 99, -999, 999, -9999, -147483646, 9999, -99999, 99999, -1111111, 999, 9999))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 9, -99, 99, -999, 999, -9999, -147483646, 9999, -99999, 99999, -1111111, 999, 9999))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, 123, -45, -990, -1000, 100, -3330, 432, 10, 88, -147483646, 777, -10000, 123456789, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, 123, -45, -990, -1000, 100, -3330, 432, 10, 88, -147483646, 777, -10000, 123456789, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(432, -123456, 0, -123456789, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(432, -123456, 0, -123456789, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -7770, -5555, 1110, 6666, -7777, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -9999))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -7770, -5555, 1110, 6666, -7777, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -9999))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 123, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 123, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 123, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 123, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 147483646, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, 88, 9, 999999))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 147483646, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, 88, 9, 999999))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, 4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, 4444))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -123456, -987654, 11111, 3333, -4444, 666, -77, 88, 9, 999999))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -123456, -987654, 11111, 3333, -4444, 666, -77, 88, 9, 999999))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, -3332, -3333, 4444, 6666, -7777, 8888, -9999, 2219, -3330, 4440, -5550, -7770, 8880, -9990, -5555, 2219))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, -3332, -3333, 4444, 6666, -7777, 8888, -9999, 2219, -3330, 4440, -5550, -7770, 8880, -9990, -5555, 2219))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 2220, 123456789, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 2220, 123456789, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, -10))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, -10))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, 3333, 666, -77, 88, 88, -888888))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, 3333, 666, -77, 88, 88, -888888))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, -987655))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, -987655))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, 147483646, -147483646, 147483646, -147483646, 147483646, -147483646, 147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, 147483646, -147483646, 147483646, -147483646, 147483646, -147483646, 147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, 100, -987654, 11111, 3333, -4444, 666, -77, 88, 9, 999999, 999999))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, 100, -987654, 11111, 3333, -4444, 666, -77, 88, 9, 999999, 999999))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, 554, -45, -990, -1000, 100, -199, 432, 10, 20, -3333, 30, -100, 777, -10000, 123456789, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, 554, -45, -990, -1000, 100, -199, 432, 10, 20, -3333, 30, -100, 777, -10000, 123456789, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, -9990, -5555))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, -9990, -5555)))
		);
		if (correct.contains(false)) {
			throw new AssertionError();
		}
	}
	public static void test4()  throws NoSuchAlgorithmException {
		Solution s = new Solution();
		SolutionGenerated s2 = new SolutionGenerated();
		List<Boolean> correct = Arrays.asList(
			s.countNums(new ArrayList<>(Arrays.asList(0, -1, -10, 10, -11, -12, 555, 797, -45, -990, -9990, -1000, 100, 123, 432, 10, 88, 30, 777, -10000, 123456789, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(0, -1, -10, 10, -11, -12, 555, 797, -45, -990, -9990, -1000, 100, 123, 432, 10, 88, 30, 777, -10000, 123456789, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, 554, -45, -990, -1000, 100, -199, 432, -77, 10, 20, 30, 666, 777, -10000, 123456789, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, 554, -45, -990, -1000, 100, -199, 432, -77, 10, 20, 30, 666, 777, -10000, 123456789, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(1, -100, 2, 3, 4, 5, 6, 7, 9, 13, 99, -999, 16, 998, -9999, 9999, -99999, 99999, -1111111, 999))) == s2.countNums(new ArrayList<>(Arrays.asList(1, -100, 2, 3, 4, 5, 6, 7, 9, 13, 99, -999, 16, 998, -9999, 9999, -99999, 99999, -1111111, 999))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123457, -987654, 11111, 3333, 666, -77, 88, 88, -888888))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123457, -987654, 11111, 3333, 666, -77, 88, 88, -888888))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 10, 30, 666, 777, -10000, 123456789, 7))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 10, 30, 666, 777, -10000, 123456789, 7))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -5555, 6666, -7777, 8888, -9999, 1110, -987654, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555, 4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -5555, 6666, -7777, 8888, -9999, 1110, -987654, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555, 4444))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(-10, -11, -12, 555, 797, 123456789, -990, -1000, 100, 123, 432, 10, 20, 666, 777, -10000, 123456789, 777, -10))) == s2.countNums(new ArrayList<>(Arrays.asList(-10, -11, -12, 555, 797, 123456789, -990, -1000, 100, 123, 432, 10, 20, 666, 777, -10000, 123456789, 777, -10))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 147483646, 999999, 14, -123456, -987654, 11111, -123457, 3333, -4444, 555, 666, -77, 88, 9, -987654))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 147483646, 999999, 14, -123456, -987654, 11111, -123457, 3333, -4444, 555, 666, -77, 88, 9, -987654))),
			s.countNums(new ArrayList<>(Arrays.asList(0, 0, 30, 0, -147483646, 0, 0, 0, 0, 99, 0))) == s2.countNums(new ArrayList<>(Arrays.asList(0, 0, 30, 0, -147483646, 0, 0, 0, 0, 99, 0))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, 555, 666, -77, 88, 9, 999999))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, 555, 666, -77, 88, 9, 999999))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 10000, 2, 3, 4, 5, 19, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 10000, 2, 3, 4, 5, 19, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456788, 777, 777, 797, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456788, 777, 777, 797, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 777, 797, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 777, 797, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, -147483646, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, -147483646, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 9, 16, 17, 18, 19, 20, -199, -99, -9))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 9, 16, 17, 18, 19, 20, -199, -99, -9))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 8, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, -987655, 9, -987654, -987654))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 8, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, -987655, 9, -987654, -987654))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, -147483646, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, -147483646, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111))),
			s.countNums(new ArrayList<>(Arrays.asList(1112, 2223, -3332, -3333, 4444, 6666, -7777, 8888, -9999, 2219, -3330, 4440, -5550, -7770, 8880, -9990, -5555, 2219))) == s2.countNums(new ArrayList<>(Arrays.asList(1112, 2223, -3332, -3333, 4444, 6666, -7777, 8888, -9999, 2219, -3330, 4440, -5550, -7770, 8880, -9990, -5555, 2219))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, 0, -10, 10, -11, -12, 555, 796, 123456789, -990, 100, -5555, 123, 432, 10, 20, 666, 777, -10000, 123456789, 777, -10, -10))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, 0, -10, 10, -11, -12, 555, 796, 123456789, -990, 100, -5555, 123, 432, 10, 20, 666, 777, -10000, 123456789, 777, -10, -10))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 10000, 2, 3, 4, 5, 19, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -147483646, 99999, -1111111))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 10000, 2, 3, 4, 5, 19, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -147483646, 99999, -1111111))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -7770, -5555, 6666, -7777, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -3330))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -7770, -5555, 6666, -7777, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -3330))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123457, -987654, 11111, 3333, 666, -77, 88, 88, 100))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123457, -987654, 11111, 3333, 666, -77, 88, 88, 100))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, 147483646, -147483646, 147483646, -147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, 147483646, -147483646, 147483646, -147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 776, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 777, 797, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 776, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 777, 797, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 10000, 2, 3, 4, 5, 19, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 10000, 2, 3, 4, 5, 19, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111))),
			s.countNums(new ArrayList<>(Arrays.asList(7, 1111, 2223, 7, 9999, 4444, -7770, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, 4444))) == s2.countNums(new ArrayList<>(Arrays.asList(7, 1111, 2223, 7, 9999, 4444, -7770, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, 4444))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, 18, 8, 5))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, 18, 8, 5))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, -3332, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 123, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, -3332, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 123, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, -147483646, -147483646, -147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, -147483646, -147483646, -147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, 999999, -22222, -4444, 555, -77, 88, 9, 999999))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, 999999, -22222, -4444, 555, -77, 88, 9, 999999))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 433, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 433, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 147483646, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, -987654, 88, 9, 999999))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 147483646, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, -987654, 88, 9, 999999))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, 2219, 797, -45, -990, -1000, -3332, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 123, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, 2219, 797, -45, -990, -1000, -3332, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 123, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, -3333, 4444, -5555, 6666, -7777, 8888, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555, 1111, 8888))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, -3333, 4444, -5555, 6666, -7777, 8888, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555, 1111, 8888))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, 554, -45, -990, 2220, 100, -199, 432, 10, 20, -3333, 30, -100, 777, -10000, 123456789, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, 554, -45, -990, 2220, 100, -199, 432, 10, 20, -3333, 30, -100, 777, -10000, 123456789, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 9, -99, 99, -98, -999, 999, -9999, -147483646, 9999, -99999, 99999, -1111111, 999))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 9, -99, 99, -98, -999, 999, -9999, -147483646, 9999, -99999, 99999, -1111111, 999))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -123456, -987654, 11111, 3333, -4444, 666, -77, 88, 9, 999999, 9))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -123456, -987654, 11111, 3333, -4444, 666, -77, 88, 9, 999999, 9))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, -147483646, -147483646, -147483646, 6, -147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, -147483646, -147483646, -147483646, 6, -147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, -888888, -123456, 147483646, 11111, 3333, -4444, 666, -77, 88, 88))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, -888888, -123456, 147483646, 11111, 3333, -4444, 666, -77, 88, 88))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, -987655, 9, -987654, -22222))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, -987655, 9, -987654, -22222))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, 555, 666, -77, 88, -987655, 11111, -888888))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, 555, 666, -77, 88, -987655, 11111, -888888))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, 123456789, -990, -1000, 100, 123, 432, 10, 20, 666, 777, -10000, 19, 123456789, 777, -10))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, 123456789, -990, -1000, 100, 123, 432, 10, 20, 666, 777, -10000, 19, 123456789, 777, -10))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, -147483646, 147483646, 147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, -147483646, 147483646, 147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -5555, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -5555, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, -1, -10, -11, -12, -9999, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, -1, -10, -11, -12, -9999, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(0, 0, 0, 0, 2219, 0, 0, 0, 0, 0, 0))) == s2.countNums(new ArrayList<>(Arrays.asList(0, 0, 0, 0, 2219, 0, 0, 0, 0, 0, 0))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, -888888, -123456, 11111, -22221, 3333, -4444, 666, -77, 88, 9, 999999))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, -888888, -123456, 11111, -22221, 3333, -4444, 666, -77, 88, 9, 999999))),
			s.countNums(new ArrayList<>(Arrays.asList(-22221, 147483646, 147483646, 147483646, -147483646, -147483646, 147483646, 147483646, -147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(-22221, 147483646, 147483646, 147483646, -147483646, -147483646, 147483646, 147483646, -147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, -22222, 3333, -4444, 555, 666, -77, 88, 999998, -987655, 9, -987654, -987654))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, -22222, 3333, -4444, 555, 666, -77, 88, 999998, -987655, 9, -987654, -987654)))
		);
		if (correct.contains(false)) {
			throw new AssertionError();
		}
	}
	public static void test5()  throws NoSuchAlgorithmException {
		Solution s = new Solution();
		SolutionGenerated s2 = new SolutionGenerated();
		List<Boolean> correct = Arrays.asList(
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, 3333, 666, -77, 88, 88, -22222, -888888, 88))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, 3333, 666, -77, 88, 88, -22222, -888888, 88))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, -147483646, -99, 99, -999, 999, -9999, -99999, 99999, -1111111))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, -147483646, -99, 99, -999, 999, -9999, -99999, 99999, -1111111))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, 147483646, -147483646, 147483646, -147483646, 147483646, 147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, 147483646, -147483646, 147483646, -147483646, 147483646, 147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -11, 31, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -11, 31, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, -888888, -987654, 11111, -22222, 3333, -4444, 666, -77, 88, 9, 999999))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, -888888, -987654, 11111, -22222, 3333, -4444, 666, -77, 88, 9, 999999))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -2, 0, -123456789, 123456789, 0))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -2, 0, -123456789, 123456789, 0))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 10, 30, 666, 777, -10000, 123456789, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 10, 30, 666, 777, -10000, 123456789, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -3330, 1111))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -3330, 1111))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 123456789, 11111, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 123456789, 11111, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, -147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, -147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 147483646, 999999, 14, -123456, -987654, 11111, -123457, 3333, -4444, 555, 666, -77, 88, 9, -987654, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 147483646, 999999, 14, -123456, -987654, 11111, -123457, 3333, -4444, 555, 666, -77, 88, 9, -987654, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, 88, 9, 999999, -123456))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, 88, 9, 999999, -123456))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 777, 797, 777, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 777, 797, 777, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 10000, 2, 3, 4, 5, 19, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 10000, 2, 3, 4, 5, 19, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, -98, 147483646, -147483646, -98))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, -98, 147483646, -147483646, -98))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, -987655, 123, 432, 10, 88, -147483646, 777, -10000, 123456789, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, -987655, 123, 432, 10, 88, -147483646, 777, -10000, 123456789, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 9999, 4444, -10000, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555, 4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 9999, 4444, -10000, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555, 4444))),
			s.countNums(new ArrayList<>(Arrays.asList(665, 1000000, 999999, -123456, -987654, 11111, 3333, -4444, 666, -77, 88, 9, 999999, 999999))) == s2.countNums(new ArrayList<>(Arrays.asList(665, 1000000, 999999, -123456, -987654, 11111, 3333, -4444, 666, -77, 88, 9, 999999, 999999))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, -147483646, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111, 5))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, -147483646, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111, 5))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, 2222, -123456, -987654, 3333, -4444, 555, 666, -77, 88, -987655, 9, -987654))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, 2222, -123456, -987654, 3333, -4444, 555, 666, -77, 88, -987655, 9, -987654))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -7770, -5555, 6666, -7777, -990, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -7770, -5555, 6666, -7777, -990, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -11, -12, 555, 797, -45, 667, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456788, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -11, -12, 555, 797, -45, 667, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456788, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, 147483646, -147483646, 147483646, -147483646, 147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, 147483646, -147483646, 147483646, -147483646, 147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, -147483646, -147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, -147483646, -147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -147483646, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 777, 797, 777, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -147483646, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 777, 797, 777, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, 147483646, -147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, 147483646, -147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -11, 31, -12, 555, 797, -45, -990, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -11, 31, -12, 555, 797, -45, -990, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, 0, -10, 10, -11, 555, 796, 123456789, -990, 100, -5555, 123, 432, 10, 20, 666, 777, -10000, 123456789, 777, -10, -10))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, 0, -10, 10, -11, 555, 796, 123456789, -990, 100, -5555, 123, 432, 10, 20, 666, 777, -10000, 123456789, 777, -10, -10))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, 6666, -7777, 8888, -9999, 1110, 2219, -7770, -5550, 6660, -7770, 8880, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, 6666, -7777, 8888, -9999, 1110, 2219, -7770, -5550, 6660, -7770, 8880, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 2220, 123456789, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 2220, 123456789, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(0, -2, 0, -123456789, 123456789, -2))) == s2.countNums(new ArrayList<>(Arrays.asList(0, -2, 0, -123456789, 123456789, -2))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, 778, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, 778, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 100, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, -990))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 100, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, -990))),
			s.countNums(new ArrayList<>(Arrays.asList(1112, 2223, -3332, -3333, 4444, 6666, -7777, 8888, -9999, 2219, -3330, 4440, -5550, -7770, 8880, -9990, -5555, -123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(1112, 2223, -3332, -3333, 4444, 6666, -7777, 8888, -9999, 2219, -3330, 4440, -5550, -7770, 8880, -9990, -5555, -123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 776, -990, -11, -12, 797, -45, -990, 100, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 777, 797, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 776, -990, -11, -12, 797, -45, -990, 100, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 777, 797, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, 18))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, 18))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, -3332, 122, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 123, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, -3332, 122, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 123, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, -3332, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 123, 123456789, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, -3332, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 123, 123456789, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, 123456789, -990, -1000, 100, 778, -5555, 123, 432, 10, 20, 666, 777, -10000, 123456789, 777, -10, -10))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, 123456789, -990, -1000, 100, 778, -5555, 123, 432, 10, 20, 666, 777, -10000, 123456789, 777, -10, -10))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, -7770, -5555, 8880, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, -7770, -5555, 8880, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, -1111111, 4, 5, 6, 7, 8, 9, -147483646, -99, 99, -999, 999, -9999, -99999, 99999, -1111111))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, -1111111, 4, 5, 6, 7, 8, 9, -147483646, -99, 99, -999, 999, -9999, -99999, 99999, -1111111))),
			s.countNums(new ArrayList<>(Arrays.asList(1, -100, 3, 4, 5, 6, 7, 9, 13, 99, -999, 16, 998, -9999, 9999, -99999, 99999, -1111111, 999))) == s2.countNums(new ArrayList<>(Arrays.asList(1, -100, 3, 4, 5, 6, 7, 9, 13, 99, -999, 16, 998, -9999, 9999, -99999, 99999, -1111111, 999))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, 2222, -123456, -987654, 3333, -4444, 554, 666, -77, 88, -987655, 9, -987654, 999999))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, 2222, -123456, -987654, 3333, -4444, 554, 666, -77, 88, -987655, 9, -987654, 999999))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -147483646, -990, -11, -12, -999, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 777, 797, 777, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -147483646, -990, -11, -12, -999, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 777, 797, 777, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(999998, 1000000, 999999, -888888, -987654, 11111, 3333, -4444, 555, 666, -77, 88, 9, 3333, 999999, 11111))) == s2.countNums(new ArrayList<>(Arrays.asList(999998, 1000000, 999999, -888888, -987654, 11111, 3333, -4444, 555, 666, -77, 88, 9, 3333, 999999, 11111))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, 778, -1111111, 10, 20, 30, 666, 777, -10000, 777, 777, 797, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, 778, -1111111, 10, 20, 30, 666, 777, -10000, 777, 777, 797, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(-1000, 1111, 2222, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(-1000, 1111, 2222, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 2, 3, 4, 5, 6, 7, 8, 9, -147483646, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111, 7))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 2, 3, 4, 5, 6, 7, 8, 9, -147483646, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111, 7))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -147483646, -990, -11, -12, -999, -45, -990, -1000, 999, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 777, 797, 777, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -147483646, -990, -11, -12, -999, -45, -990, -1000, 999, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 777, 797, 777, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -4443, -123456, -987654, 11111, 3333, -4444, 666, -77, 88, 88))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -4443, -123456, -987654, 11111, 3333, -4444, 666, -77, 88, 88)))
		);
		if (correct.contains(false)) {
			throw new AssertionError();
		}
	}
	public static void test6()  throws NoSuchAlgorithmException {
		Solution s = new Solution();
		SolutionGenerated s2 = new SolutionGenerated();
		List<Boolean> correct = Arrays.asList(
			s.countNums(new ArrayList<>(Arrays.asList(-1000, 1111, 2222, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2220, -3330, 4440, 123456788, 6660, -7770, 8880, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(-1000, 1111, 2222, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2220, -3330, 4440, 123456788, 6660, -7770, 8880, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(0, -10, 10, -11, -12, 555, 797, 123, -45, -990, -1000, 100, -3330, 432, 10, 88, -147483646, 777, -10000, 123456789, 777, 777, 100))) == s2.countNums(new ArrayList<>(Arrays.asList(0, -10, 10, -11, -12, 555, 797, 123, -45, -990, -1000, 100, -3330, 432, 10, 88, -147483646, 777, -10000, 123456789, 777, 777, 100))),
			s.countNums(new ArrayList<>(Arrays.asList(999999, 999999, -888888, -123456, 2, 3333, -4444, 555, 666, -77, 88, -987655, 9, -987654))) == s2.countNums(new ArrayList<>(Arrays.asList(999999, 999999, -888888, -123456, 2, 3333, -4444, 555, 666, -77, 88, -987655, 9, -987654))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 88, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 10))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 88, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 10))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, 10, -11, -12, 555, 797, -45, -990, -1000, -987655, 123, 432, 10, 88, -147483646, 777, -10000, 123456789, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, 10, -11, -12, 555, 797, -45, -990, -1000, -987655, 123, 432, 10, 88, -147483646, 777, -10000, 123456789, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 123456788, 123, -1111111, 100, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, -990))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 123456788, 123, -1111111, 100, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, -990))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, -12, 10, 20, 10, 30, 666, 777, -10000, 123456789, 777, 10, -1, -12))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, -12, 10, 20, 10, 30, 666, 777, -10000, 123456789, 777, 10, -1, -12))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -987654, 11111, -123456, 3334, -4444, 666, -77, 88, 88))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -987654, 11111, -123456, 3334, -4444, 666, -77, 88, 88))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, 665, -11, -12, 555, 797, 554, -45, -990, -1000, 100, -199, 432, -77, 10, 20, 30, 666, 777, -10000, 123456789, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, 665, -11, -12, 555, 797, 554, -45, -990, -1000, 100, -199, 432, -77, 10, 20, 30, 666, 777, -10000, 123456789, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -2, 0, -123456789, 123456789, 0, 0))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -2, 0, -123456789, 123456789, 0, 0))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 9, -99, 99, -98, -999, 999, -9999, -147483646, 9999, -99999, 99999, -1111111))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 9, -99, 99, -98, -999, 999, -9999, -147483646, 9999, -99999, 99999, -1111111))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 20, 666, 777, -10000, 123456789, 777, 777, 797, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 20, 666, 777, -10000, 123456789, 777, 777, 797, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(0, -1, -10, 10, -11, -12, 555, 797, -45, -990, -9990, -1000, 100, 123, 432, 10, 88, 30, 777, -10000, 123456789, 777, 777, -1))) == s2.countNums(new ArrayList<>(Arrays.asList(0, -1, -10, 10, -11, -12, 555, 797, -45, -990, -9990, -1000, 100, 123, 432, 10, 88, 30, 777, -10000, 123456789, 777, 777, -1))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, 778, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 30))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, 778, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 30))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 11, 2, 3, 4, 5, 6, 7, 9, -99, 99, -999, 16, 998, -9999, 9999, -99999, 99999, -1111111, 999))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 11, 2, 3, 4, 5, 6, 7, 9, -99, 99, -999, 16, 998, -9999, 9999, -99999, 99999, -1111111, 999))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, 147483646, -147483646, 147483646, 147483646, 147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, 147483646, -147483646, 147483646, 147483646, 147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, -888888, -123456, -987654, 11111, -22222, 3333, 555, 666, -77, 88, 9, 999999))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, -888888, -123456, -987654, 11111, -22222, 3333, 555, 666, -77, 88, 9, 999999))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, 3333, -4444, -99999, 666, -77, 88, 9, 3333))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, 3333, -4444, -99999, 666, -77, 88, 9, 3333))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 797, -45, -990, -1000, -1000, 100, 123, 432, 10, 20, 10, 30, 666, 777, -10000, 123456789, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 797, -45, -990, -1000, -1000, 100, 123, 432, 10, 20, 10, 30, 666, 777, -10000, 123456789, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, -1111111, 4, 5, 6, 7, 8, 9, -147483646, -99, 99, -999, 999, -9999, -99999, 99999, -1111111, 99999))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, -1111111, 4, 5, 6, 7, 8, 9, -147483646, -99, 99, -999, 999, -9999, -99999, 99999, -1111111, 99999))),
			s.countNums(new ArrayList<>(Arrays.asList(1, -100, 3, 4, 5, 6, 7, 9, 13, 99, -999, 16, 998, -9999, 9999, -99999, 99999, -1111111, 999, 6))) == s2.countNums(new ArrayList<>(Arrays.asList(1, -100, 3, 4, 5, 6, 7, 9, 13, 99, -999, 16, 998, -9999, 9999, -99999, 99999, -1111111, 999, 6))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 9, -99, 99, -98, -999, 999, -9999, -147483646, 9999, -99999, 99999, -1111111, 999, 999))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 9, -99, 99, -98, -999, 999, -9999, -147483646, 9999, -99999, 99999, -1111111, 999, 999))),
			s.countNums(new ArrayList<>(Arrays.asList(0, -2, 0, -123456789, 123456789, -2, -2))) == s2.countNums(new ArrayList<>(Arrays.asList(0, -2, 0, -123456789, 123456789, -2, -2))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -3331, -5555, 6666, -199, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111, -7770))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -3331, -5555, 6666, -199, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111, -7770))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -2, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -2, -10000, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -2, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -2, -10000, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, -99, 20, 30, 4, 666, 777, -10000, 123456789, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, -99, 20, 30, 4, 666, 777, -10000, 123456789, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -990, -11, 2219, 797, -45, -990, -1000, -3332, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 123, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -990, -11, 2219, 797, -45, -990, -1000, -3332, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 123, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, 14, -123456, -987654, 11111, -4444, 3333, -4444, 555, 1000001, 666, -77, 88, 9, -987654))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, 14, -123456, -987654, 11111, -4444, 3333, -4444, 555, 1000001, 666, -77, 88, 9, -987654))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 776, -990, -11, -12, 797, -45, -990, 100, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 777, 797, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 776, -990, -11, -12, 797, -45, -990, 100, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 777, 797, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(999998, 1000000, 999999, -888888, -987654, 11111, 3333, -4444, 555, 666, -77, 88, 9, 3333, 11111))) == s2.countNums(new ArrayList<>(Arrays.asList(999998, 1000000, 999999, -888888, -987654, 11111, 3333, -4444, 555, 666, -77, 88, 9, 3333, 11111))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 99999, 9, -147483646, -99, 99, -999, 999, -9999, -99999, 99999, -1111111))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 99999, 9, -147483646, -99, 99, -999, 999, -9999, -99999, 99999, -1111111))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, 8880, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456788, 777, 777, 797, 777, 777, -45))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, 8880, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456788, 777, 777, 797, 777, 777, -45))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, 666, -5555, 6666, -7777, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, 666, -5555, 6666, -7777, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 5, 6, 7, 9, -99, 99, -999, 999, -9999, -147483646, 9999, -99999, 99999, -1111111, 999, 9999))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 5, 6, 7, 9, -99, 99, -999, 999, -9999, -147483646, 9999, -99999, 99999, -1111111, 999, 9999))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -2, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -2, -10000, 123456789, 555))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -2, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -2, -10000, 123456789, 555))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 10000, 2, 3, 4, 5, 19, 7, 8, 9, -99, 99, 999, -9999, 9999, -147483646, 99999, -1111111, 2))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 10000, 2, 3, 4, 5, 19, 7, 8, 9, -99, 99, 999, -9999, 9999, -147483646, 99999, -1111111, 2))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -3331, 6666, -199, 1, -7777, 8888, -9999, 1110, 2219, 1000001, -3330, 4440, 6660, -7770, 8880, 1111, -7770))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -3331, 6666, -199, 1, -7777, 8888, -9999, 1110, 2219, 1000001, -3330, 4440, 6660, -7770, 8880, 1111, -7770))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, -888888, 11111, -9, 3333, -4444, 555, 666, -77, 88, 9, 999999))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, -888888, 11111, -9, 3333, -4444, 555, 666, -77, 88, 9, 999999))),
			s.countNums(new ArrayList<>(Arrays.asList(999999, 999999, -888888, -123456, -987655, 2, 3333, -4444, 555, 666, -77, 88, -987655, -987654))) == s2.countNums(new ArrayList<>(Arrays.asList(999999, 999999, -888888, -123456, -987655, 2, 3333, -4444, 555, 666, -77, 88, -987655, -987654))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456788, 777, 777, 3334, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456788, 777, 777, 3334, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 2220, -147483646, 147483646, 2220, 2220))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 2220, -147483646, 147483646, 2220, 2220))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 2220, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 2220, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, -7770, -5555, 8880, -9990, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, -7770, -5555, 8880, -9990, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(88, 999998, 1000000, 999999, -888888, -987654, 11111, 3333, -4444, 666, -77, 88, 9, 3333, 999999, 11111))) == s2.countNums(new ArrayList<>(Arrays.asList(88, 999998, 1000000, 999999, -888888, -987654, 11111, 3333, -4444, 666, -77, 88, 9, 3333, 999999, 11111))),
			s.countNums(new ArrayList<>(Arrays.asList(2223, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, -7770, -5555, 8880))) == s2.countNums(new ArrayList<>(Arrays.asList(2223, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, -7770, -5555, 8880))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 797, 777, 777, 123))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 797, 777, 777, 123))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -7770, -5555, 6666, -7777, -9999, 1110, 2219, -147483646, 4445, -3330, 4440, -5550, 6660, -10, 8880, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -7770, -5555, 6666, -7777, -9999, 1110, 2219, -147483646, 4445, -3330, 4440, -5550, 6660, -10, 8880, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(2222, 2223, -3332, -3333, 4444, 6666, -7777, 8888, -9999, 2219, -3330, 4440, -5550, -7770, 8880, -9990, -5555, 2219))) == s2.countNums(new ArrayList<>(Arrays.asList(2222, 2223, -3332, -3333, 4444, 6666, -7777, 8888, -9999, 2219, -3330, 4440, -5550, -7770, 8880, -9990, -5555, 2219))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 999999, 12, 1000000, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, 18, -199))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 999999, 12, 1000000, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, 18, -199))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, 778, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 30, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, 778, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 30, 777)))
		);
		if (correct.contains(false)) {
			throw new AssertionError();
		}
	}
	public static void test7()  throws NoSuchAlgorithmException {
		Solution s = new Solution();
		SolutionGenerated s2 = new SolutionGenerated();
		List<Boolean> correct = Arrays.asList(
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, 99, -45, -990, -1000, 100, -98, 432, -12, 10, 20, 10, 30, 666, 777, -10000, 123456789, 777, 10, -1, -12))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, 99, -45, -990, -1000, 100, -98, 432, -12, 10, 20, 10, 30, 666, 777, -10000, 123456789, 777, 10, -1, -12))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, 10, -11, -12, 797, -45, -990, -1000, -1000, 100, 123, 432, 20, 10, 30, 666, 777, -10000, 123456789, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, 10, -11, -12, 797, -45, -990, -1000, -1000, 100, 123, 432, 20, 10, 30, 666, 777, -10000, 123456789, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, -147483646, -147483646, 147483646, -147483646, 147483646, 147483646, 147483646, 147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, -147483646, -147483646, 147483646, -147483646, 147483646, 147483646, 147483646, 147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, 123, -45, -990, -1000, 100, -3330, 432, 10, 88, -147483646, 777, 555, 123456789, 777, 777, -12))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, 123, -45, -990, -1000, 100, -3330, 432, 10, 88, -147483646, 777, 555, 123456789, 777, 777, -12))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, -888888, 11111, -9, -4444, 555, 666, -77, 88, 9, 999999))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, -888888, 11111, -9, -4444, 555, 666, -77, 88, 9, 999999))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 8, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 666, 88, -987655, 9, -987654, -987654, 11111))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 8, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 666, 88, -987655, 9, -987654, -987654, 11111))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, 666, -5555, 6666, -7777, -9999, 1110, 2219, -3330, -5550, 6660, -7770, 8880, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, 666, -5555, 6666, -7777, -9999, 1110, 2219, -3330, -5550, 6660, -7770, 8880, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(2, 3, 4, 5, 6, 7, 9, -99, 99, -98, -999, 999, -9999, -147483646, 9999, -99999, 99999, -1111111, 999, 999))) == s2.countNums(new ArrayList<>(Arrays.asList(2, 3, 4, 5, 6, 7, 9, -99, 99, -98, -999, 999, -9999, -147483646, 9999, -99999, 99999, -1111111, 999, 999))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, 17, -7770, 8880, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, 17, -7770, 8880, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, -147483646, -888888, 147483646, -147483646, 147483646, 147483646, 147483646, 147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, -147483646, -888888, 147483646, -147483646, 147483646, 147483646, 147483646, 147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 7, 9999, 4444, -7770, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 7, 9999, 4444, -7770, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 1, 10000, 2, 3, 4, 5, 19, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 1, 10000, 2, 3, 4, 5, 19, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, 88, 9, 999999, 3333))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, 88, 9, 999999, 3333))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, -147483646, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555, 4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, -147483646, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555, 4444))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 10000, 2, 3, 4, 5, 19, -100, 8, 9, -99, 99, 999, -9999, 9999, -147483646, 99999, -1111111, 2))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 10000, 2, 3, 4, 5, 19, -100, 8, 9, -99, 99, 999, -9999, 9999, -147483646, 99999, -1111111, 2))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, 123, -45, -1000, 100, -3330, 432, 10, 88, -147483646, 777, 555, 123456789, 777, 777, -12))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, 123, -45, -1000, 100, -3330, 432, 10, 88, -147483646, 777, 555, 123456789, 777, 777, -12))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 100))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 100))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, 147483646, -147483646, 147483646, -147483646, 147483646, -147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, 147483646, -147483646, 147483646, -147483646, 147483646, -147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -11, -12, 555, 797, -45, 667, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456788, 777, 777, -10000))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -11, -12, 555, 797, -45, 667, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456788, 777, 777, -10000))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 8, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 147483646, 555, 666, -77, 88, -987655, 9, -987654, -987654))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 8, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 147483646, 555, 666, -77, 88, -987655, 9, -987654, -987654))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 10, 30, 666, 777, -10000, 123456789, 777, 10))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 10, 30, 666, 777, -10000, 123456789, 777, 10))),
			s.countNums(new ArrayList<>(Arrays.asList(665, 1000000, 999999, -123456, -987654, 11111, 3333, -4444, -77, 88, 9, 999999, 999999))) == s2.countNums(new ArrayList<>(Arrays.asList(665, 1000000, 999999, -123456, -987654, 11111, 3333, -4444, -77, 88, 9, 999999, 999999))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -11, -12, 555, 797, 99, -45, -990, -1000, 100, -98, 432, -12, 10, 20, 10, 30, 666, 777, -10000, 123456789, 777, 10, -1, -12, -990))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -11, -12, 555, 797, 99, -45, -990, -1000, 100, -98, 432, -12, 10, 20, 10, 30, 666, 777, -10000, 123456789, 777, 10, -1, -12, -990))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -3331, -5555, 6666, -199, -7777, -147483646, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111, -7770))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -3331, -5555, 6666, -199, -7777, -147483646, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111, -7770))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 123456789, 123456790, 11111, 123456789, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 123456789, 123456790, 11111, 123456789, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 0, -10, -11, -12, 555, 797, -45, -990, -1000, 100, -1, 123, 432, 10, 20, 30, 666, 777, -10000, -3332, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 0, -10, -11, -12, 555, 797, -45, -990, -1000, 100, -1, 123, 432, 10, 20, 30, 666, 777, -10000, -3332, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 2220, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 2220, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 88, 123, 432, 10, 20, 30, 666, -5555, -10000, 123456789, 777, 777, 10))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 88, 123, 432, 10, 20, 30, 666, -5555, -10000, 123456789, 777, 777, 10))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 432, 19, 20, -199, -99, -9, 9))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 432, 19, 20, -199, -99, -9, 9))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 999999, 12, 13, 14, 15, 17, 18, 19, 20, -199, -99, -9, 18, 18))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 999999, 12, 13, 14, 15, 17, 18, 19, 20, -199, -99, -9, 18, 18))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123457, -987654, 11111, 3333, 666, 100, 88, 88, 6))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123457, -987654, 11111, 3333, 666, 100, 88, 88, 6))),
			s.countNums(new ArrayList<>(Arrays.asList(1, -100, 3, 4, 5, 6, 7, 9, 13, 16, 99, -999, 16, 998, -9999, 9999, -99999, 99999, -1111111, 999))) == s2.countNums(new ArrayList<>(Arrays.asList(1, -100, 3, 4, 5, 6, 7, 9, 13, 16, 99, -999, 16, 998, -9999, 9999, -99999, 99999, -1111111, 999))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, -888888, -987654, 11111, -22222, 3333, 4445, 666, -77, 88, 9, 999999))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, -888888, -987654, 11111, -22222, 3333, 4445, 666, -77, 88, 9, 999999))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, -147483646, -888888, 147483646, -147483646, 147483646, 147483646, 147483646, 147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, -147483646, -888888, 147483646, -147483646, 147483646, 147483646, 147483646, 147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, -888888, 11111, -9, 3333, -4444, 555, 666, -77, 88, 9, 999999, -4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, -888888, 11111, -9, 3333, -4444, 555, 666, -77, 88, 9, 999999, -4444))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, -888888, -987654, 11111, -22222, 3333, -4444, 666, -77, -22223, 88, 9, 999999))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, -888888, -987654, 11111, -22222, 3333, -4444, 666, -77, -22223, 88, 9, 999999))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -7770, -5555, 6666, -7777, -990, 1110, 2219, -3330, 4440, -5550, 6660, -7770, -3331, 8880, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -7770, -5555, 6666, -7777, -990, 1110, 2219, -3330, 4440, -5550, 6660, -7770, -3331, 8880, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, -147483646, -147483646, 147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, -147483646, -147483646, 147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, -888888, -123456, -987654, 11111, 999999, -22222, -4444, 555, -77, 88, 9, 999999))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, -888888, -123456, -987654, 11111, 999999, -22222, -4444, 555, -77, 88, 9, 999999))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 10000, 2, 3, 4, 5, 19, -100, 8, 9, -99, 99, 999, -9999, 9999, -147483646, -123456789, -1111111, 2))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 10000, 2, 3, 4, 5, 19, -100, 8, 9, -99, 99, 999, -9999, 9999, -147483646, -123456789, -1111111, 2))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, -987655, 999999))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, -987655, 999999))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -9990, -1000, 100, 123, 3333, 432, 10, 88, 30, 777, -10000, 123456789, 777, 777, -1))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -9990, -1000, 100, 123, 3333, 432, 10, 88, 30, 777, -10000, 123456789, 777, 777, -1))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 778, -22222, 3333, 555, 666, -77, 88, -987655, 11111, -888888))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 778, -22222, 3333, 555, 666, -77, 88, -987655, 11111, -888888))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, 147483646, -147483646, 147483646, -147483646, 147483646, -147483646, 147483646, 147483646, 147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, 147483646, -147483646, 147483646, -147483646, 147483646, -147483646, 147483646, 147483646, 147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-1000, 1111, 2222, -3333, 4444, -5555, 6665, -7777, 8888, -2, -9999, 1110, 2220, -3330, 4440, 123456788, 6660, -7770, 8880, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(-1000, 1111, 2222, -3333, 4444, -5555, 6665, -7777, 8888, -2, -9999, 1110, 2220, -3330, 4440, 123456788, 6660, -7770, 8880, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 88, -147483646, 777, -10000, 123456789, 777, 777, -11))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 88, -147483646, 777, -10000, 123456789, 777, 777, -11))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, -147483646, -888888, -147483646, 147483646, 147483646, 147483646, 147483646, 147483646, -147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, -147483646, -888888, -147483646, 147483646, 147483646, 147483646, 147483646, 147483646, -147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, -147483646, -888887, 147483646, -147483646, 147483646, 147483646, 147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, -147483646, -888887, 147483646, -147483646, 147483646, 147483646, 147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, -3333, 4444, -5555, 6666, -7777, 4441, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, -3333, 4444, -5555, 6666, -7777, 4441, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990)))
		);
		if (correct.contains(false)) {
			throw new AssertionError();
		}
	}
	public static void test8()  throws NoSuchAlgorithmException {
		Solution s = new Solution();
		SolutionGenerated s2 = new SolutionGenerated();
		List<Boolean> correct = Arrays.asList(
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 123456788, 123, -1111111, 100, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 797, 777, 777, -990, 797))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 123456788, 123, -1111111, 100, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 797, 777, 777, -990, 797))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 433, 432, 10, 20, 30, 666, 6666, 777, -10000, 123456789, 778))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 433, 432, 10, 20, 30, 666, 6666, 777, -10000, 123456789, 778))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, -10000))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, -10000))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, -147483646, -99, 99, -999, 999, -9999, -99999, 99999, -1111111, -99, 5))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, -147483646, -99, 99, -999, 999, -9999, -99999, 99999, -1111111, -99, 5))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, 88, 999999, 3333))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, 88, 999999, 3333))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, -22222, 3333, -4444, 555, 666, -77, 88, 999998, -987655, 778, -987654, -987654, -77))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, -22222, 3333, -4444, 555, 666, -77, 88, 999998, -987655, 778, -987654, -987654, -77))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -3331, -5555, -5555, 6666, -199, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -3331, -5555, -5555, 6666, -199, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, -7770, -3331, -5555, 6666, -199, -7777, 8888, -9999, 1110, -147483646, -3330, 4440, 6660, -7770, 8880, 1111, 1111))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, -7770, -3331, -5555, 6666, -199, -7777, 8888, -9999, 1110, -147483646, -3330, 4440, 6660, -7770, 8880, 1111, 1111))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, -7770, -3331, -5556, 6666, -199, -7777, 8888, -9999, 1110, -147483646, -3330, 4440, 6660, -7770, 8880, 1111, 1111))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, -7770, -3331, -5556, 6666, -199, -7777, 8888, -9999, 1110, -147483646, -3330, 4440, 6660, -7770, 8880, 1111, 1111))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 9, -99, 99, -98, -999, 999, -9999, -147483646, 9999, -99999, 99999, -1111111, 999, 5, -9999))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 9, -99, 99, -98, -999, 999, -9999, -147483646, 9999, -99999, 99999, -1111111, 999, 5, -9999))),
			s.countNums(new ArrayList<>(Arrays.asList(-1000, 1111, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(-1000, 1111, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4443, -7770, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3331, 4440, 6660, -7770, 8880, 1111, 2219))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4443, -7770, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3331, 4440, 6660, -7770, 8880, 1111, 2219))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -12, -12, 797, -45, -990, -1000, -3332, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 123, 777, 797))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -12, -12, 797, -45, -990, -1000, -3332, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 123, 777, 797))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 31, -12, 555, 797, -45, -990, -1000, 100, -1111111, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 31, -12, 555, 797, -45, -990, -1000, 100, -1111111, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4443, -7770, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3331, 2, 6660, -7770, 8880, 1111, 2219, 6666))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4443, -7770, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3331, 2, 6660, -7770, 8880, 1111, 2219, 6666))),
			s.countNums(new ArrayList<>(Arrays.asList(-3330, 2223, -3332, -3333, 4444, 6666, -7777, 8888, -9999, 2219, -3330, 4440, -5550, -7770, 8880, -9990, -5555, -123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-3330, 2223, -3332, -3333, 4444, 6666, -7777, 8888, -9999, 2219, -3330, 4440, -5550, -7770, 8880, -9990, -5555, -123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -11, 10, -11, -12, 555, 797, 123, -45, -1000, 100, -3330, 432, 10, 88, -147483646, 777, 555, 123456789, 777, 777, -12, 797))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -11, 10, -11, -12, 555, 797, 123, -45, -1000, 100, -3330, 432, 10, 88, -147483646, 777, 555, 123456789, 777, 777, -12, 797))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, 88, 999999, 3333, 1000000))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, 88, 999999, 3333, 1000000))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, -3332, -3333, 4444, 6666, -7777, 8888, -9999, 2219, -3330, 4440, -5550, -7770, 8880, -9990, -5555, 2219, 2223))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, -3332, -3333, 4444, 6666, -7777, 8888, -9999, 2219, -3330, 4440, -5550, -7770, 8880, -9990, -5555, 2219, 2223))),
			s.countNums(new ArrayList<>(Arrays.asList(0, -2, 0, 123456789, -2, -2))) == s2.countNums(new ArrayList<>(Arrays.asList(0, -2, 0, 123456789, -2, -2))),
			s.countNums(new ArrayList<>(Arrays.asList(999999, 999999, -888888, -123456, -987654, 3333, -4444, 555, 666, -77, 88, -987655, 9, -987654))) == s2.countNums(new ArrayList<>(Arrays.asList(999999, 999999, -888888, -123456, -987654, 3333, -4444, 555, 666, -77, 88, -987655, 9, -987654))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 10000, 2, 3, 4, 3, 5, 19, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 10000, 2, 3, 4, 3, 5, 19, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111))),
			s.countNums(new ArrayList<>(Arrays.asList(999999, -888888, -123456, 2, 3333, -4444, -4444, 555, 666, -77, 88, -987655, 9, -987654))) == s2.countNums(new ArrayList<>(Arrays.asList(999999, -888888, -123456, 2, 3333, -4444, -4444, 555, 666, -77, 88, -987655, 9, -987654))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -7770, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 4444, 1111))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -7770, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 4444, 1111))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 797, 777, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 797, 777, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 777, 797, 777, 777, 777, -45))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 777, 797, 777, 777, 777, -45))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, 999999, 3333))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, 999999, 3333))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, -147483646, -147483646, -147483646, 6, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, -147483646, -147483646, -147483646, 6, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, -3333, 4444, -5555, 6666, -7777, 4441, 8888, -9999, 1110, 2219, -3330, -5550, 6660, -7770, 8880, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, -3333, 4444, -5555, 6666, -7777, 4441, 8888, -9999, 1110, 2219, -3330, -5550, 6660, -7770, 8880, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(432, 0, -123456789, 123456789, -123456789, 0))) == s2.countNums(new ArrayList<>(Arrays.asList(432, 0, -123456789, 123456789, -123456789, 0))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5550))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5550))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, 17, -7770, 8880, -9990, 8888))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, 17, -7770, 8880, -9990, 8888))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, -888888, 11110, 11111, -22222, 3333, -4444, 666, -77, 88, 9, 999999))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, -888888, 11110, 11111, -22222, 3333, -4444, 666, -77, 88, 9, 999999))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, -9990, -9, -5555, -3330))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, -9990, -9, -5555, -3330))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, -22222, 3333, -4444, 555, 666, -77, 88, -987655, 778, -987654, -987654, -77))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, -22222, 3333, -4444, 555, 666, -77, 88, -987655, 778, -987654, -987654, -77))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, 88, 999999, 3333, -4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, 88, 999999, 3333, -4444))),
			s.countNums(new ArrayList<>(Arrays.asList(0, 0, 0, 0, 2219, 0, 0, 1, 0, 0, 0))) == s2.countNums(new ArrayList<>(Arrays.asList(0, 0, 0, 0, 2219, 0, 0, 1, 0, 0, 0))),
			s.countNums(new ArrayList<>(Arrays.asList(2223, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, 3334, -3330, 4440, -5550, -7770, -5555, 8880))) == s2.countNums(new ArrayList<>(Arrays.asList(2223, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, 3334, -3330, 4440, -5550, -7770, -5555, 8880))),
			s.countNums(new ArrayList<>(Arrays.asList(0, -1, -10, 10, -11, -12, 555, 797, -45, -990, -9990, -1000, 123, 432, 10, 88, 30, 777, -10000, 123456789, 777, 777, -1, -1))) == s2.countNums(new ArrayList<>(Arrays.asList(0, -1, -10, 10, -11, -12, 555, 797, -45, -990, -9990, -1000, 123, 432, 10, 88, 30, 777, -10000, 123456789, 777, 777, -1, -1))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -147483646, -990, -11, -12, 797, -45, -990, -1000, 100, 123, 778, -1111111, 10, -12, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 30, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -147483646, -990, -11, -12, 797, -45, -990, -1000, 100, 123, 778, -1111111, 10, -12, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 30, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, 10, -11, -12, 555, 797, -45, -990, -1000, -987655, 432, 10, 88, -147483646, 777, -10000, 123456789, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, 10, -11, -12, 555, 797, -45, -990, -1000, -987655, 432, 10, 88, -147483646, 777, -10000, 123456789, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(8888, 999999, 14, -123456, 11111, 3333, -4444, 555, 666, -77, 88, 9, -987654))) == s2.countNums(new ArrayList<>(Arrays.asList(8888, 999999, 14, -123456, 11111, 3333, -4444, 555, 666, -77, 88, 9, -987654))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, 18, 8, 5, 20))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, 18, 8, 5, 20))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, 778, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 777, -10000, 123456789, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, 778, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 777, -10000, 123456789, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(432, 0, -123456789, 123456789, -123456789, 0, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(432, 0, -123456789, 123456789, -123456789, 0, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(0, -1, -10, 10, -11, -12, 555, 797, 777, -45, -990, -9990, -1000, 100, 123, 432, 88, 30, 777, -10000, 123456789, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(0, -1, -10, 10, -11, -12, 555, 797, 777, -45, -990, -9990, -1000, 100, 123, 432, 88, 30, 777, -10000, 123456789, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4, -7770, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111, 2219, 4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4, -7770, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111, 2219, 4444))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 20, 555, 797, -45, 3334, -1000, 100, 432, -12, 10, 20, 10, 30, 666, 777, -10000, 123456789, 777, 10, -1, -12))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 20, 555, 797, -45, 3334, -1000, 100, 432, -12, 10, 20, 10, 30, 666, 777, -10000, 123456789, 777, 10, -1, -12))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, 18, -22222, 3333, -4444, 555, 666, -77, 88, -987655, 9, -987654, -987654))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, 18, -22222, 3333, -4444, 555, 666, -77, 88, -987655, 9, -987654, -987654))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 147483646, 3, 4, 5, 6, 9, -99, 99, -999, 999, -9999, -147483646, 9999, -99999, 99999, -1111111, 999))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 147483646, 3, 4, 5, 6, 9, -99, 99, -999, 999, -9999, -147483646, 9999, -99999, 99999, -1111111, 999)))
		);
		if (correct.contains(false)) {
			throw new AssertionError();
		}
	}
	public static void test9()  throws NoSuchAlgorithmException {
		Solution s = new Solution();
		SolutionGenerated s2 = new SolutionGenerated();
		List<Boolean> correct = Arrays.asList(
			s.countNums(new ArrayList<>(Arrays.asList(999998, 1000000, 999999, -888888, -987654, 3333, -4444, 555, 666, -77, 88, 9, 3333, 11111, 999998, -77))) == s2.countNums(new ArrayList<>(Arrays.asList(999998, 1000000, 999999, -888888, -987654, 3333, -4444, 555, 666, -77, 88, 9, 3333, 11111, 999998, -77))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 433, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, -12, 10, 20, 10, 30, 666, 777, -10000, 123456789, 777, 10, -1, -12))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 433, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, -12, 10, 20, 10, 30, 666, 777, -10000, 123456789, 777, 10, -1, -12))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, -3333, 4444, 1110, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5550))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, -3333, 4444, 1110, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5550))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, 147483646, -147483646, 147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, 147483646, -147483646, 147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-22221, 147483646, 147483646, -147483646, -147483646, -147483646, 147483646, 147483646, -147483646, -147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(-22221, 147483646, 147483646, -147483646, -147483646, -147483646, 147483646, 147483646, -147483646, -147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, 16, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456788, 777, 777, 3334, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, 16, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456788, 777, 777, 3334, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(8888, 999999, 14, -123456, 11111, 3333, -4444, 11112, 555, 666, -77, 88, 9, -987654))) == s2.countNums(new ArrayList<>(Arrays.asList(8888, 999999, 14, -123456, 11111, 3333, -4444, 11112, 555, 666, -77, 88, 9, -987654))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, -1111111, 4, 5, 6, 7, 8, 9, -147483646, -99, 99, -999, 999, -9999, -99999, 99999, -1111111, 99999, 1))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, -1111111, 4, 5, 6, 7, 8, 9, -147483646, -99, 99, -999, 999, -9999, -99999, 99999, -1111111, 99999, 1))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, -3333, 4444, -5555, 6666, -7777, 4441, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 1112, 6660, -7770, 8880, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, -3333, 4444, -5555, 6666, -7777, 4441, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 1112, 6660, -7770, 8880, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(0, -1, -10, 10, -12, 147483646, 555, 797, -45, -990, -9990, -1000, 123, 432, 10, 88, 30, 777, -10000, 123456789, 777, 777, -1, -1, 30))) == s2.countNums(new ArrayList<>(Arrays.asList(0, -1, -10, 10, -12, 147483646, 555, 797, -45, -990, -9990, -1000, 123, 432, 10, 88, 30, 777, -10000, 123456789, 777, 777, -1, -1, 30))),
			s.countNums(new ArrayList<>(Arrays.asList(0, -2, 0, -5556, 123456789, -2, -2))) == s2.countNums(new ArrayList<>(Arrays.asList(0, -2, 0, -5556, 123456789, -2, -2))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 3333, -4444, 555, 666, -77, 88, 9, -987654))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 3333, -4444, 555, 666, -77, 88, 9, -987654))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 4440, 3333, 666, -77, 88, 88, -22222, -888888, 88))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 4440, 3333, 666, -77, 88, 88, -22222, -888888, 88))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -7770, -5555, 6666, -7777, -9999, 1110, 2219, -147483646, 4445, -3330, 4440, -5550, 6660, -10, 8880, 998, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -7770, -5555, 6666, -7777, -9999, 1110, 2219, -147483646, 4445, -3330, 4440, -5550, 6660, -10, 8880, 998, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 10000, 2, 3, 4, 5, 19, -9, 8, 1111, 9, -99, 99, -999, 999, -9999, 9999, -147483646, 99999, -1111111, 3, 19))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 10000, 2, 3, 4, 5, 19, -9, 8, 1111, 9, -99, 99, -999, 999, -9999, 9999, -147483646, 99999, -1111111, 3, 19))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, -98, 147483646, -147483646, -97, -98))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, -98, 147483646, -147483646, -97, -98))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 3, 4, 5, 6, 7, 9, -99, 99, -98, -999, 999, -9999, -147483646, 9999, -99999, 99999, -1111111))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 3, 4, 5, 6, 7, 9, -99, 99, -98, -999, 999, -9999, -147483646, 9999, -99999, 99999, -1111111))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 123456788, 123, -1111111, 100, 10, 20, 30, 666, 777, -10000, 123456788, 777, 777, 797, 797, 777, 777, -990, 797, 797))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 123456788, 123, -1111111, 100, 10, 20, 30, 666, 777, -10000, 123456788, 777, 777, 797, 797, 777, 777, -990, 797, 797))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, -888888, 11111, -9, 3333, -4444, 555, 666, -77, 88, -1, 999999, -123456, -4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, -888888, 11111, -9, 3333, -4444, 555, 666, -77, 88, -1, 999999, -123456, -4444))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, 147483646, 11111, 3333, 666, -77, 88, 88))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, 147483646, 11111, 3333, 666, -77, 88, 88))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 8888, 2220, 123456789, 123456788, -147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 8888, 2220, 123456789, 123456788, -147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, -7770, -3331, -5555, 6666, -199, -7777, 8888, -9999, 1110, 88, -147483646, -3330, 4440, 6660, -7770, 8880, 1111, 1111, 9999))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, -7770, -3331, -5555, 6666, -199, -7777, 8888, -9999, 1110, 88, -147483646, -3330, 4440, 6660, -7770, 8880, 1111, 1111, 9999))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, 10, 20, 30, 666, 777, -9999, 123456788, 777, 777, 797, 777, 777, 777, -45))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, 10, 20, 30, 666, 777, -9999, 123456788, 777, 777, 797, 777, 777, 777, -45))),
			s.countNums(new ArrayList<>(Arrays.asList(-123456789, 2, 10000, 2, 3, 4, 5, 19, 7, 8, 9, -99, 99, 999, -9999, 9999, -147483646, 99999, -1111111, 2))) == s2.countNums(new ArrayList<>(Arrays.asList(-123456789, 2, 10000, 2, 3, 4, 5, 19, 7, 8, 9, -99, 99, 999, -9999, 9999, -147483646, 99999, -1111111, 2))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, 10, -12, 797, -45, -990, -1000, -1000, 100, 123, 432, 20, 10, 30, 666, 777, -10000, 123456789, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, 10, -12, 797, -45, -990, -1000, -1000, 100, 123, 432, 20, 10, 30, 666, 777, -10000, 123456789, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 6660, 4444, -7770, -5555, 6666, -7777, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -3330))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 6660, 4444, -7770, -5555, 6666, -7777, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -3330))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 777, 777, 776, 797, 777, 777, 123, 797))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 777, 777, 776, 797, 777, 777, 123, 797))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -3331, -5555, 6666, -199, -7777, -147483646, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111, -7770, 6660, 2219))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -3331, -5555, 6666, -199, -7777, -147483646, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111, -7770, 6660, 2219))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, -1111111, 4, 5, 6, 7, 8, -147483646, -99, 99, -999, 999, -9999, -99999, 99999, -1111111, 4))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, -1111111, 4, 5, 6, 7, 8, -147483646, -99, 99, -999, 999, -9999, -99999, 99999, -1111111, 4))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -11, 31, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, -10000))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -11, 31, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, -10000))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, 778, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 2219, 777, 777, 797, 777, 777, 100))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, 778, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 2219, 777, 777, 797, 777, 777, 100))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, 2219, 797, -45, -990, -1000, 147483646, -3332, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, -10, 777, 123, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, 2219, 797, -45, -990, -1000, 147483646, -3332, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, -10, 777, 123, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, 100, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 777, 797, 777, -11, 123456788))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, 100, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 777, 797, 777, -11, 123456788))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, 14, -123456, -987654, 11111, -4444, 3333, 122, -4444, 555, 1000001, 666, -77, 88, -987654))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, 14, -123456, -987654, 11111, -4444, 3333, 122, -4444, 555, 1000001, 666, -77, 88, -987654))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 123456789, 2, 147483646, 2220, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 123456789, 2, 147483646, 2220, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, -1, -10, -11, -12, -9999, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 777, 777, -45))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, -1, -10, -11, -12, -9999, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 777, 777, -45))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, 11, -45, -990, -1000, 100, 88, 123, 432, 10, 20, 30, 666, 777, -10000, 778, 777, 10))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, 11, -45, -990, -1000, 100, 88, 123, 432, 10, 20, 30, 666, 777, -10000, 778, 777, 10))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -5555, 6666, 18, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, 4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -5555, 6666, 18, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, 4444))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 9, 16, 17, 18, 19, 20, -199, -99, -9, 10))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 9, 16, 17, 18, 19, 20, -199, -99, -9, 10))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 9999, 4444, -10000, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555, 10000, 4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 9999, 4444, -10000, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555, 10000, 4444))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 87, -987655, 999999))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 87, -987655, 999999))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 123456789, 147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 123456789, 147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 122, 12, 13, 14, 15, 9, 16, 17, 18, 19, 20, -199, -99, -9))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 122, 12, 13, 14, 15, 9, 16, 17, 18, 19, 20, -199, -99, -9))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, 147483646, -147483646, -147483646, -147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, 147483646, -147483646, -147483646, -147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(9, 1000000, 8, -888888, -123456, 11111, -22222, 3333, -4444, 555, 666, -77, 88, -987655, 9, -987654, -987654, -123456))) == s2.countNums(new ArrayList<>(Arrays.asList(9, 1000000, 8, -888888, -123456, 11111, -22222, 3333, -4444, 555, 666, -77, 88, -987655, 9, -987654, -987654, -123456))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -3331, -5555, 6666, -199, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1110, -7770, 4))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -3331, -5555, 6666, -199, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1110, -7770, 4))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -147483646, -990, -11, -12, 797, -45, -990, -1000, 100, 123, 778, -1111111, 9, -12, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 30, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -147483646, -990, -11, -12, 797, -45, -990, -1000, 100, 123, 778, -1111111, 9, -12, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 30, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, 18))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, 18))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, -77, 2223, -3333, 4444, -5555, 6666, -7777, 8888, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555, 1111, 8888, 6660))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, -77, 2223, -3333, 4444, -5555, 6666, -7777, 8888, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555, 1111, 8888, 6660))),
			s.countNums(new ArrayList<>(Arrays.asList(-1000, 1111, 2222, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2220, -3330, 4440, 123456788, -147483646, -7770, 8880, -9990, -1000))) == s2.countNums(new ArrayList<>(Arrays.asList(-1000, 1111, 2222, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2220, -3330, 4440, 123456788, -147483646, -7770, 8880, -9990, -1000)))
		);
		if (correct.contains(false)) {
			throw new AssertionError();
		}
	}
	public static void test10()  throws NoSuchAlgorithmException {
		Solution s = new Solution();
		SolutionGenerated s2 = new SolutionGenerated();
		List<Boolean> correct = Arrays.asList(
			s.countNums(new ArrayList<>(Arrays.asList(8888, -888888, -5555, 14, -123456, 11111, 3333, -4444, 11112, 555, 666, -77, 88, 9, -987654))) == s2.countNums(new ArrayList<>(Arrays.asList(8888, -888888, -5555, 14, -123456, 11111, 3333, -4444, 11112, 555, 666, -77, 88, 9, -987654))),
			s.countNums(new ArrayList<>(Arrays.asList(-22221, 19, 147483646, -147483646, -147483646, -147483646, 147483646, 147483646, -147483646, -147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(-22221, 19, 147483646, -147483646, -147483646, -147483646, 147483646, 147483646, -147483646, -147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, 4444, 6660))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, 4444, 6660))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -3331, -5555, -5555, 6666, -199, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, 8880, 1111))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -3331, -5555, -5555, 6666, -199, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, 8880, 1111))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 0, -10, -11, -12, 30, 555, 797, -45, -990, -1000, 100, -1, 123, 432, 10, 20, 30, 666, 777, -10000, -3332, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 0, -10, -11, -12, 30, 555, 797, -45, -990, -1000, 100, -1, 123, 432, 10, 20, 30, 666, 777, -10000, -3332, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -5555, 6666, -7777, 1112, 8888, -1111111, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111, 2219, 1111))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -5555, 6666, -7777, 1112, 8888, -1111111, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111, 2219, 1111))),
			s.countNums(new ArrayList<>(Arrays.asList(0, -10, 10, -11, -12, 555, 797, 123, -45, -990, -1000, 100, -3330, 432, 10, 88, -147483646, 777, -10000, 123456789, 777, 777, 101))) == s2.countNums(new ArrayList<>(Arrays.asList(0, -10, 10, -11, -12, 555, 797, 123, -45, -990, -1000, 100, -3330, 432, 10, 88, -147483646, 777, -10000, 123456789, 777, 777, 101))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 999999, 12, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, 18))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 999999, 12, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, 18))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, -147483646, -888888, 147483646, 147483646, 147483646, 147483646, 147483646, -147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, -147483646, -888888, 147483646, 147483646, 147483646, 147483646, 147483646, -147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 10, 30, 666, -10000, 123456789, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 10, 30, 666, -10000, 123456789, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(88, 999998, 18, 1000000, 999999, -888888, -987654, 11111, 3333, -4444, 666, -77, 88, 9, 3333, 999999, 11111))) == s2.countNums(new ArrayList<>(Arrays.asList(88, 999998, 18, 1000000, 999999, -888888, -987654, 11111, 3333, -4444, 666, -77, 88, 9, 3333, 999999, 11111))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, -3332, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456788, 777, 777, 797, 777, 777, 123, 123456789, 777, -12))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, -3332, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456788, 777, 777, 797, 777, 777, 123, 123456789, 777, -12))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, 778, -1111111, 10, 20, 30, 666, 777, -10000, 777, 777, 797, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, 778, -1111111, 10, 20, 30, 666, 777, -10000, 777, 777, 797, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, -1111111, 2223, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2220, -3330, 4440, 6660, -7770, 8880, -9990, -9, -5555, 1111))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, -1111111, 2223, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2220, -3330, 4440, 6660, -7770, 8880, -9990, -9, -5555, 1111))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, -147483646, -888887, 147483646, -3333, 147483646, 147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, -147483646, -888887, 147483646, -3333, 147483646, 147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, -7770, -3331, -5555, 6666, -199, -7777, 8888, 1110, -147483646, -3330, -9990, 6660, -7770, 8880, 1111, 1111))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, -7770, -3331, -5555, 6666, -199, -7777, 8888, 1110, -147483646, -3330, -9990, 6660, -7770, 8880, 1111, 1111))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, -3333, 4444, 1110, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5550, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, -3333, 4444, 1110, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5550, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(999998, 18, 1000000, 999999, -888888, -987654, 11111, 3333, -4444, 666, -77, 88, 9, 3333, 999999, 11111))) == s2.countNums(new ArrayList<>(Arrays.asList(999998, 18, 1000000, 999999, -888888, -987654, 11111, 3333, -4444, 666, -77, 88, 9, 3333, 999999, 11111))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 797, -45, -990, -1000, -1000, 100, 123, 432, 10, 20, 10, 30, 666, 777, -10000, 123456789, 777, 666))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 797, -45, -990, -1000, -1000, 100, 123, 432, 10, 20, 10, 30, 666, 777, -10000, 123456789, 777, 666))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -123456, -987654, 11111, 3333, -4444, -99999, 666, -77, 88, 9, 3333, -888887, 9))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -123456, -987654, 11111, 3333, -4444, -99999, 666, -77, 88, 9, 3333, -888887, 9))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 1111))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 1111))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, -888888, -987654, 11111, -22222, 3333, 666, -77, -22223, 88, 9, 999999))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, -888888, -987654, 11111, -22222, 3333, 666, -77, -22223, 88, 9, 999999))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 6, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111, 9999))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 6, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111, 9999))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, 88, 999999, 3333, -4444, 11111))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, 88, 999999, 3333, -4444, 11111))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 1000001, 9, 10, 11, 12, 13, 14, 15, 9, 16, 17, 18, 19, 20, -199, -99, -9))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 1000001, 9, 10, 11, 12, 13, 14, 15, 9, 16, 17, 18, 19, 20, -199, -99, -9))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, -987655, 999999, -4444, -77))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, -987655, 999999, -4444, -77))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 797, 777, 777, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 797, 777, 777, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, -999, 999, -9999, -99999, 99999, -1111111))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, -999, 999, -9999, -99999, 99999, -1111111))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, 100, 123, -1111111, 10, 20, 30, 666, 123456788, 777, 777, 797, 777, -11, 123456788))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, 100, 123, -1111111, 10, 20, 30, 666, 123456788, 777, 777, 797, 777, -11, 123456788))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 7, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 7, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, 778, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 101, 777, 777, 797, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, 778, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 101, 777, 777, 797, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(0, -1, -10, 10, -11, 5, -12, 555, 797, -45, -990, -9990, -1000, 100, 123, 432, 10, 88, 30, 777, -147483646, -10000, 123456789, 777, 777, -1))) == s2.countNums(new ArrayList<>(Arrays.asList(0, -1, -10, 10, -11, 5, -12, 555, 797, -45, -990, -9990, -1000, 100, 123, 432, 10, 88, 30, 777, -147483646, -10000, 123456789, 777, 777, -1))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, -3333, 4444, -5555, 6666, -7777, 8888, -147483646, 1110, 2219, -3330, 4440, 6660, -7770, 8880, -9990, -5555, -3330))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, -3333, 4444, -5555, 6666, -7777, 8888, -147483646, 1110, 2219, -3330, 4440, 6660, -7770, 8880, -9990, -5555, -3330))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 123456788, 123, -1111111, 100, 10, 20, 30, 666, 777, -10000, 123456788, 777, 777, 797, 797, 777, 777, -990, 797, 797, -1000))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 123456788, 123, -1111111, 100, 10, 20, 30, 666, 777, -10000, 123456788, 777, 777, 797, 797, 777, 777, -990, 797, 797, -1000))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987653, 11111, -22222, 3333, -4444, -77, 666, -77, 999999, 3333, -77))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987653, 11111, -22222, 3333, -4444, -77, 666, -77, 999999, 3333, -77))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 776, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 29, 666, 777, -9999, 798, 123456788, 777, 777, 797, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 776, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 29, 666, 777, -9999, 798, 123456788, 777, 777, 797, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(0, -1, -10, 10, -11, -12, 797, -45, -990, -9990, -1000, 123, 432, 10, 88, 30, 777, -10000, 123456789, 777, 777, -1, -1))) == s2.countNums(new ArrayList<>(Arrays.asList(0, -1, -10, 10, -11, -12, 797, -45, -990, -9990, -1000, 123, 432, 10, 88, 30, 777, -10000, 123456789, 777, 777, -1, -1))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, 1112, -45, -990, -1000, 123456788, 123, -1111111, 100, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, -990))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, 1112, -45, -990, -1000, 123456788, 123, -1111111, 100, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, -990))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, -99, 555, 797, -45, -990, -1000, 100, 123, 432, -12, 10, 20, 10, 30, 666, 777, -10000, 29, 123456789, 777, 10, -1, -12))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, -99, 555, 797, -45, -990, -1000, 100, 123, 432, -12, 10, 20, 10, 30, 666, 777, -10000, 29, 123456789, 777, 10, -1, -12))),
			s.countNums(new ArrayList<>(Arrays.asList(-1111111, 1, 2, 3, -1111111, 4, 5, 6, 7, 8, 9, -147483646, -99, 99, 999, -9999, -99999, 99999, -1111111, 99999))) == s2.countNums(new ArrayList<>(Arrays.asList(-1111111, 1, 2, 3, -1111111, 4, 5, 6, 7, 8, 9, -147483646, -99, 99, 999, -9999, -99999, 99999, -1111111, 99999))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 9999, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, 15, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555, 4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 9999, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, 15, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555, 4444))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, -5551, 4444, -7770, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 1111))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, -5551, 4444, -7770, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 1111))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -11, 19, 555, 797, -45, -990, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -11, 19, 555, 797, -45, -990, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(-22221, 147483646, 147483646, 147483646, -147483646, -147483646, 147483646, 147483646, -147483646, -123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-22221, 147483646, 147483646, 147483646, -147483646, -147483646, 147483646, 147483646, -147483646, -123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -7770, -5555, 6666, -7777, -990, 1110, 2219, -3330, 4440, -5550, 6659, -7770, -3331, 8880, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -7770, -5555, 6666, -7777, -990, 1110, 2219, -3330, 4440, -5550, 6659, -7770, -3331, 8880, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, 147483646, -147483646, 147483646, -147483646, 147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, 147483646, -147483646, 147483646, -147483646, 147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -147483646, -11, 19, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 3, -10000, 123456789, 777, 777, 432))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -147483646, -11, 19, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 3, -10000, 123456789, 777, 777, 432))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -7770, -5555, 6666, -7777, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -3331, -9990, -3330))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -7770, -5555, 6666, -7777, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -3331, -9990, -3330))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 1000001, 667, 9, 10, 11, 12, 13, 14, 15, 9, 16, 17, 18, 19, 20, -199, -99, -9))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 1000001, 667, 9, 10, 11, 12, 13, 14, 15, 9, 16, 17, 18, 19, 20, -199, -99, -9))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -11, 31, -12, 555, -888887, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, 123456789, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -11, 31, -12, 555, -888887, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, 123456789, 777, 777)))
		);
		if (correct.contains(false)) {
			throw new AssertionError();
		}
	}
	public static void test11()  throws NoSuchAlgorithmException {
		Solution s = new Solution();
		SolutionGenerated s2 = new SolutionGenerated();
		List<Boolean> correct = Arrays.asList(
			s.countNums(new ArrayList<>(Arrays.asList(1000000, -1, -10, -11, -12, -9999, 555, 797, -45, -990, -1000, 100, 555, 123, 432, 10, 20, 30, 666, 777, 433, -10000, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, -1, -10, -11, -12, -9999, 555, 797, -45, -990, -1000, 100, 555, 123, 432, 10, 20, 30, 666, 777, 433, -10000, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(0, 0, 0, 0, 2219, 0, 0, 0, 0, 0))) == s2.countNums(new ArrayList<>(Arrays.asList(0, 0, 0, 0, 2219, 0, 0, 0, 0, 0))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 9999, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, -5550, 6660, -7770, 8880, -9990, -5555, 4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 9999, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, -5550, 6660, -7770, 8880, -9990, -5555, 4444))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -987654, 11111, 999999, -22222, 3334, -4444, 555, 666, -77, 88, 9, 999999))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -987654, 11111, 999999, -22222, 3334, -4444, 555, 666, -77, 88, 9, 999999))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -10, -12, 555, 797, 123456789, -990, -1000, 100, -5555, 123, 432, 10, 20, 666, 777, -10000, 123456789, 777, -10, -10))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -10, -12, 555, 797, 123456789, -990, -1000, 100, -5555, 123, 432, 10, 20, 666, 777, -10000, 123456789, 777, -10, -10))),
			s.countNums(new ArrayList<>(Arrays.asList(-987656, -987655, -1, -10, 10, -11, -12, 555, 797, 123456789, -990, -1000, 100, 778, -5555, 123, 432, 10, 20, 666, 777, -10000, 123456789, 777, -10, -10))) == s2.countNums(new ArrayList<>(Arrays.asList(-987656, -987655, -1, -10, 10, -11, -12, 555, 797, 123456789, -990, -1000, 100, 778, -5555, 123, 432, 10, 20, 666, 777, -10000, 123456789, 777, -10, -10))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -990, -11, 2219, 797, -45, -990, -1000, -3332, 123, -1111111, 10, 20, 30, 666, 19, 777, -10000, 123456789, 777, 777, 797, 777, 777, 123, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -990, -11, 2219, 797, -45, -990, -1000, -3332, 123, -1111111, 10, 20, 30, 666, 19, 777, -10000, 123456789, 777, 777, 797, 777, 777, 123, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -5555, -3330, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555, 4444, 6667))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -5555, -3330, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555, 4444, 6667))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 3333, -4444, 555, 666, -77, 88, 9, -987654, 555))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 3333, -4444, 555, 666, -77, 88, 9, -987654, 555))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, -888888, -123456, -987654, 11111, -22222, 3333, 666, -77, 88, 9, 999999, -22221, -888888))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, -888888, -123456, -987654, 11111, -22222, 3333, 666, -77, 88, 9, 999999, -22221, -888888))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 1, 10000, 2, 3, 4, 5, 19, 8, 9, -99, -99, 99, -999, 999, -9999, 9999, 99999, -1111111))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 1, 10000, 2, 3, 4, 5, 19, 8, 9, -99, -99, 99, -999, 999, -9999, 9999, 99999, -1111111))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, -147483646, 11111, -22222, 3333, -147483646, -4444, 666, -77, 88, 9, 999999, -123456))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, -147483646, 11111, -22222, 3333, -147483646, -4444, 666, -77, 88, 9, 999999, -123456))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, 16, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456788, 777, 777, 3334, 777, 777, -1000, -10))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, 16, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456788, 777, 777, 3334, 777, 777, -1000, -10))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 10, 88, -147483646, 777, -10000, 123456789, 777, 777, 432))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 10, 88, -147483646, 777, -10000, 123456789, 777, 777, 432))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -11, 10, -11, 554, 797, 123, -45, -1000, 100, -3330, 432, 10, 88, -147483646, 777, 555, 123456789, 777, 777, -12, 797))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -11, 10, -11, 554, 797, 123, -45, -1000, 100, -3330, 432, 10, 88, -147483646, 777, 555, 123456789, 777, 777, -12, 797))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -5555, -3330, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5554, 4444, 6667))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 7, 9999, 4444, -5555, -3330, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5554, 4444, 6667))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, -888888, -987654, 11111, -22222, 3333, 666, -77, 88, 9, 999999))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, -888888, -987654, 11111, -22222, 3333, 666, -77, 88, 9, 999999))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, -10))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, -10))),
			s.countNums(new ArrayList<>(Arrays.asList(0, -1, -10, 10, -11, -12, 555, 797, -45, -990, -9990, -1000, 100, 123, 432, 10, 88, 30, 777, -10000, 123456789, 777, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(0, -1, -10, 10, -11, -12, 555, 797, -45, -990, -9990, -1000, 100, 123, 432, 10, 88, 30, 777, -10000, 123456789, 777, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, -147483646, -888888, 147483646, 147483646, 147483646, 147483646, 147483646, -147483646, 147483646, 147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, -147483646, -888888, 147483646, 147483646, 147483646, 147483646, 147483646, -147483646, 147483646, 147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, -147483646, 777, 797, 777, 777, 123, -990, 10))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, -147483646, 777, 797, 777, 777, 123, -990, 10))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -2, 0, 123456789, 0))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -2, 0, 123456789, 0))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, 10, -11, -12, 797, -45, -990, -1000, -1000, 123, 432, 20, 10, 30, 666, 777, -10000, 123456789, 1000001, 123))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, 10, -11, -12, 797, -45, -990, -1000, -1000, 123, 432, 20, 10, 30, 666, 777, -10000, 123456789, 1000001, 123))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, 147483646, -147483646, 147483646, -22223, -147483646, 147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, 147483646, -147483646, 147483646, -22223, -147483646, 147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -5555, 6666, -7777, 1111, 1112, 8888, -1111111, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 6660, 1111, -9990, 1111))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 4, 7, 9999, 4444, -7770, -5555, 6666, -7777, 1111, 1112, 8888, -1111111, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 6660, 1111, -9990, 1111))),
			s.countNums(new ArrayList<>(Arrays.asList(0, -1, -10, -9, -12, 147483646, 555, 797, -45, -990, -9990, -1000, 123, 432, 10, 88, 30, 777, -10000, 123456789, 777, 777, -1, -1, 30))) == s2.countNums(new ArrayList<>(Arrays.asList(0, -1, -10, -9, -12, 147483646, 555, 797, -45, -990, -9990, -1000, 123, 432, 10, 88, 30, 777, -10000, 123456789, 777, 777, -1, -1, 30))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 147483646, 999999, 14, -123456, -987655, 11111, 3333, -4444, 555, 666, -77, -100, 88, 9, -987654))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 147483646, 999999, 14, -123456, -987655, 11111, 3333, -4444, 555, 666, -77, -100, 88, 9, -987654))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, -1, -10, -9999, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 777, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, -1, -10, -9999, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 777, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, 20))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, 20))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -5555, -990, -1000, 100, 123, 778, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 2219, 777, 777, 797, 777, 777, 100, 100, 778))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -5555, -990, -1000, 100, 123, 778, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 2219, 777, 777, 797, 777, 777, 100, 100, 778))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -123457, -10, -990, -11, -12, 797, -45, -990, -1000, 123456788, 123, -1111111, 100, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 797, 797, 777, -990, 797, -990))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -123457, -10, -990, -11, -12, 797, -45, -990, -1000, 123456788, 123, -1111111, 100, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 797, 797, 777, -990, 797, -990))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 9999, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555, 4444, -7777))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2223, 9999, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555, 4444, -7777))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, 123456789, -990, -1000, 100, 123, 432, 10, 20, 667, 777, -10000, 123456789, 777, -10))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, 123456789, -990, -1000, 100, 123, 432, 10, 20, 667, 777, -10000, 123456789, 777, -10))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 123456788, 123, -1111111, 100, 10, 20, 30, 666, 777, -10000, 123456789, 777, 797, 777, 777, -990))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 123456788, 123, -1111111, 100, 10, 20, 30, 666, 777, -10000, 123456789, 777, 797, 777, 777, -990))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, 3333, -4444, -99999, 666, -77, 88, 9, 3333, -888887, 9, 999999))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, 3333, -4444, -99999, 666, -77, 88, 9, 3333, -888887, 9, 999999))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, 147483646, -147483646, 147483646, 6659, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, 147483646, -147483646, 147483646, 6659, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, 2222, -123456, -987654, 3333, -4444, 554, 666, 999999, 88, -987655, 9, -987654, 10, 999999))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, 2222, -123456, -987654, 3333, -4444, 554, 666, 999999, 88, -987655, 9, -987654, 10, 999999))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, 666, -147483646, 147483646, -147483646, 147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, 666, -147483646, 147483646, -147483646, 147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 12, 2223, 7, 9999, 4444, -7770, -5555, 6666, -7777, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -3330))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 12, 2223, 7, 9999, 4444, -7770, -5555, 6666, -7777, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -3330))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -5554, -123456, -987654, 666, 3333, -4444, 555, 666, -77, 88, 9, -987654, 555))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -5554, -123456, -987654, 666, 3333, -4444, 555, 666, -77, 88, 9, -987654, 555))),
			s.countNums(new ArrayList<>(Arrays.asList(-123456789, 2, 10000, 2, 3, 4, 5, 19, 7, 8, 9, -99, 99, 999, -9999, 9999, -147483646, 99999, -1111111))) == s2.countNums(new ArrayList<>(Arrays.asList(-123456789, 2, 10000, 2, 3, 4, 5, 19, 7, 8, 9, -99, 99, 999, -9999, 9999, -147483646, 99999, -1111111))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, -147483646, -147483646, -147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, -147483646, -147483646, -147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-123456789, 2, 10000, 2, 3, 4, 5, 19, 7, 8, 9, -99, 99, -9999, 9999, -147483646, 99999, -1111111))) == s2.countNums(new ArrayList<>(Arrays.asList(-123456789, 2, 10000, 2, 3, 4, 5, 19, 7, 8, 9, -99, 99, -9999, 9999, -147483646, 99999, -1111111))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 777, 777, 797, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 777, 777, 797, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 123, 123456789, 10))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 123, 123456789, 10))),
			s.countNums(new ArrayList<>(Arrays.asList(1112, 2223, -3332, -3333, 4444, 6666, -7777, 8888, -9999, 2219, -3330, 4440, -5550, -7770, 8880, -9990, -5555, 2219, -5555))) == s2.countNums(new ArrayList<>(Arrays.asList(1112, 2223, -3332, -3333, 4444, 6666, -7777, 8888, -9999, 2219, -3330, 4440, -5550, -7770, 8880, -9990, -5555, 2219, -5555))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, -98, 147483646, -147483646, -98, 147483646, -98, -98))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, -98, 147483646, -147483646, -98, 147483646, -98, -98))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, -147483646, -888888, 147483646, -147483646, 147483646, 147483646, 147483646, 147483646, 147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, -147483646, -888888, 147483646, -147483646, 147483646, 147483646, 147483646, 147483646, 147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 1000001, 9, 10, 11, 13, 14, 15, 9, 16, 17, 18, 19, 20, -199, -99, -9))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 1000001, 9, 10, 11, 13, 14, 15, 9, 16, 17, 18, 19, 20, -199, -99, -9))),
			s.countNums(new ArrayList<>(Arrays.asList(7, 1111, 2223, 7, 9999, -7770, -999, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, 4444))) == s2.countNums(new ArrayList<>(Arrays.asList(7, 1111, 2223, 7, 9999, -7770, -999, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, 4444)))
		);
		if (correct.contains(false)) {
			throw new AssertionError();
		}
	}
	public static void test12()  throws NoSuchAlgorithmException {
		Solution s = new Solution();
		SolutionGenerated s2 = new SolutionGenerated();
		List<Boolean> correct = Arrays.asList(
			s.countNums(new ArrayList<>(Arrays.asList(1111, -7777, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, -7770, -5555, 8880, 20, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, -7777, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, -7770, -5555, 8880, 20, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, 147483646, -147483646, -147483646, -147483646, -147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, 147483646, -147483646, -147483646, -147483646, -147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, -147483646, -888888, 147483646, -147483646, 147483646, 147483646, 147483646, -3332, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, -147483646, -888888, 147483646, -147483646, 147483646, 147483646, 147483646, -3332, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, 123, -45, -990, 31, -1000, 100, -3330, 432, 10, 88, -147483646, 777, -10000, 123456789, 777, 777, 797, -10))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, 123, -45, -990, 31, -1000, 100, -3330, 432, 10, 88, -147483646, 777, -10000, 123456789, 777, 777, 797, -10))),
			s.countNums(new ArrayList<>(Arrays.asList(-1000, 1111, 2222, -3333, 4444, 6666, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(-1000, 1111, 2222, -3333, 4444, 6666, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -123456, -987654, -888888, 11111, -9, 3333, -4444, 555, 666, -77, 88, -1, 999999, -123456, -4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -123456, -987654, -888888, 11111, -9, 3333, -4444, 555, 666, -77, 88, -1, 999999, -123456, -4444))),
			s.countNums(new ArrayList<>(Arrays.asList(88, 999998, 1000000, 999999, 147483646, -888888, -987654, 11111, 3333, -4444, 666, -77, 88, 9, 3333, 999999, 11111))) == s2.countNums(new ArrayList<>(Arrays.asList(88, 999998, 1000000, 999999, 147483646, -888888, -987654, 11111, 3333, -4444, 666, -77, 88, 9, 3333, 999999, 11111))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -7777, -10000, 777, 777, 797, 777))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -7777, -10000, 777, 777, 797, 777))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -2, 0, 3, 123456789, 0, 0, 3))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -2, 0, 3, 123456789, 0, 0, 3))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, 88, 999999, 3333, -4444, 11111))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, 88, 999999, 3333, -4444, 11111))),
			s.countNums(new ArrayList<>(Arrays.asList(0, 0, 0, 0, 0, 0))) == s2.countNums(new ArrayList<>(Arrays.asList(0, 0, 0, 0, 0, 0))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(0, 0, 0, 0, 0))) == s2.countNums(new ArrayList<>(Arrays.asList(0, 0, 0, 0, 0))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 1, 0))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 1, 0))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, -45))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, -45))),
			s.countNums(new ArrayList<>(Arrays.asList(-7))) == s2.countNums(new ArrayList<>(Arrays.asList(-7))),
			s.countNums(new ArrayList<>(Arrays.asList(42))) == s2.countNums(new ArrayList<>(Arrays.asList(42))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, -123456789, -123456789, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, -123456789, -123456789, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 147483646, -123456789, -123456789, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 147483646, -123456789, -123456789, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, 147483646, 0, -123456789, 123456789, 0))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, 147483646, 0, -123456789, 123456789, 0))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 13, -147483646, 147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 13, -147483646, 147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -199, -99, -9))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -199, -99, -9))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(0, 0, 0, 0, 0, 0, 0, 0, 0, 1))) == s2.countNums(new ArrayList<>(Arrays.asList(0, 0, 0, 0, 0, 0, 0, 0, 0, 1))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 123456789, 147483646, -123456789, -123456789, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 123456789, 147483646, -123456789, -123456789, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, 9, -4444, -4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, 9, -4444, -4444))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, -7770, -5550, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, -7770, -5550, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, -12, 665, -77, 88, 9, -4444, -4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, -12, 665, -77, 88, 9, -4444, -4444))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 0, 0, 0, 0, 0, 0, 0, 0, 0))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 0, 0, 0, 0, 0, 0, 0, 0, 0))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, 147483646, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, 9, -4444, -4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, 147483646, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, 9, -4444, -4444))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, -7770, 8880, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, -7770, 8880, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 123456789, 147483646, -123456789, -123456789, 123456789, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 123456789, 147483646, -123456789, -123456789, 123456789, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, -12, -123456789, -123456789, 123456789, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, -12, -123456789, -123456789, 123456789, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 13, -147483646, 147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 13, -147483646, 147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 9, 88, 9, -4444, -4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 9, 88, 9, -4444, -4444))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 9, 88, 9, -4444, -987654, -4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 9, 88, 9, -4444, -987654, -4444))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 8, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 8, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, 147483646, -147483646, 147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, 147483646, -147483646, 147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, -999, -147483646, 999, -9999, 9999, -99999, 99999, -1111111))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, -999, -147483646, 999, -9999, 9999, -99999, 99999, -1111111))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, 10, -4444, 555, 16, 666, -77, 9, 88, 9, -4444, -4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, 10, -4444, 555, 16, 666, -77, 9, 88, 9, -4444, -4444))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, -3333, 4444, -5555, -7777, 8889, -9999, 1110, 2220, -3330, 4440, -5550, -7770, 8880, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, -3333, 4444, -5555, -7777, 8889, -9999, 1110, 2220, -3330, 4440, -5550, -7770, 8880, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 8888))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 8888))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 147483646, -123456790, -123456789, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 147483646, -123456790, -123456789, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, 147483646, -147483646, 147483646, -147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, 147483646, -147483646, 147483646, -147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, -123456789, -123456789, 123456789, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, -123456789, -123456789, 123456789, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9)))
		);
		if (correct.contains(false)) {
			throw new AssertionError();
		}
	}
	public static void test13()  throws NoSuchAlgorithmException {
		Solution s = new Solution();
		SolutionGenerated s2 = new SolutionGenerated();
		List<Boolean> correct = Arrays.asList(
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 123456789, 147483646, -123456789, -123456789, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 123456789, 147483646, -123456789, -123456789, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 123456789, -11, -123456789, -123456789, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 123456789, -11, -123456789, -123456789, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, 147483646, -147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, 147483646, -147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -9, -9, 14))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -9, -9, 14))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 9, 88, 9, -4444, -987654, -4444, -987654))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 9, 88, 9, -4444, -987654, -4444, -987654))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, 147483646, -147483646, 147483646, -147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, 147483646, -147483646, 147483646, -147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -11, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 8888, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -11, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 8888, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, 147483646, -147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, 147483646, -147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -199, -99, -9, 14))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -199, -99, -9, 14))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, 5, 147483646, -147483646, 147483646, -147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, 5, 147483646, -147483646, 147483646, -147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-10000, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111))) == s2.countNums(new ArrayList<>(Arrays.asList(-10000, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2220, -3330, 4440, 100, 6660, -7770, -147483646, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2220, -3330, 4440, 100, 6660, -7770, -147483646, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, -123456, 17, 18, 19, 20, -199, -99, -9, -9, 7))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, -123456, 17, 18, 19, 20, -199, -99, -9, -9, 7))),
			s.countNums(new ArrayList<>(Arrays.asList(-9999, 2222, -3333, 4444, -5555, -12, -7777, 13, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888))) == s2.countNums(new ArrayList<>(Arrays.asList(-9999, 2222, -3333, 4444, -5555, -12, -7777, 13, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 665, -77, 88, 9, -4444, -4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 665, -77, 88, 9, -4444, -4444))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, 147483646, -147483646, 147483646, -147483646, -147483646, -147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, 147483646, -147483646, 147483646, -147483646, -147483646, -147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 5, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 5, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9))),
			s.countNums(new ArrayList<>(Arrays.asList(-10000, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, 999, -9999, 9999, -99999, 99999, -1111111))) == s2.countNums(new ArrayList<>(Arrays.asList(-10000, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, 999, -9999, 9999, -99999, 99999, -1111111))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 665, -77, 88, 9, -4444, -4444, 9))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 665, -77, 88, 9, -4444, -4444, 9))),
			s.countNums(new ArrayList<>(Arrays.asList(2222, -3333, 4444, -5555, -12, -7777, 13, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888))) == s2.countNums(new ArrayList<>(Arrays.asList(2222, -3333, 4444, -5555, -12, -7777, 13, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, 4444, -5555, -11, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 8888, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, 4444, -5555, -11, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 8888, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 8, 8, 9, 10, 11, 12, 13, 14, 15, 15, 17, 18, 19, 20, -199, -99, -9, 15))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 8, 8, 9, 10, 11, 12, 13, 14, 15, 15, 17, 18, 19, 20, -199, -99, -9, 15))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, 147483646, -147483646, 147483646, -147483646, -147483646, -147483646, -147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, 147483646, -147483646, 147483646, -147483646, -147483646, -147483646, -147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, 147483646, -4443, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, 9, -4444, -4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, 147483646, -4443, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, 9, -4444, -4444))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, -5555, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -9, -9, 14))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, -5555, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -9, -9, 14))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -199, -99, -9, 14, 8))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -199, -99, -9, 14, 8))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2220, -3330, 4440, 100, 88, 6660, -7770, -147483646, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2220, -3330, 4440, 100, 88, 6660, -7770, -147483646, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, -12, 665, -77, 88, 9, -4444, -4444, 11111))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, -12, 665, -77, 88, 9, -4444, -4444, 11111))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, 147483646, -4443, -987654, -123457, 11111, -22222, 3333, -4444, 555, 666, -77, -147483646, 0, 9, -4444, -4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, 147483646, -4443, -987654, -123457, 11111, -22222, 3333, -4444, 555, 666, -77, -147483646, 0, 9, -4444, -4444))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, 10, -4444, 555, 16, 666, -77, 9, -7777, 88, 9, -4444, -4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, 10, -4444, 555, 16, 666, -77, 9, -7777, 88, 9, -4444, -4444))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 15, 147483646, 147483646, -147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 15, 147483646, 147483646, -147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-999, 1, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, -3333, -999, 999, -9999, 9999, -99999, 99999, -1111111))) == s2.countNums(new ArrayList<>(Arrays.asList(-999, 1, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, -3333, -999, 999, -9999, 9999, -99999, 99999, -1111111))),
			s.countNums(new ArrayList<>(Arrays.asList(0, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, -999, -147483646, 999, -9999, 9999, -99999, 99999, -1111111))) == s2.countNums(new ArrayList<>(Arrays.asList(0, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, -999, -147483646, 999, -9999, 9999, -99999, 99999, -1111111))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 7, 147483646, -147483646, 147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 7, 147483646, -147483646, 147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -7771, 8880, -9990, 8888))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -7771, 8880, -9990, 8888))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -99, -9, 17))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -99, -9, 17))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, 147483646, 147483646, -147483646, 147483646, -147483646, -147483646, -147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, 147483646, 147483646, -147483646, 147483646, -147483646, -147483646, -147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 2, 30, 666, 777, -10000, 123456789, 432))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 2, 30, 666, 777, -10000, 123456789, 432))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, -123456790, 147483646, 147483646, -147483646, 147483646, -147483646, -147483646, -147483646, 147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, -123456790, 147483646, 147483646, -147483646, 147483646, -147483646, -147483646, -147483646, 147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 556, -990))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 556, -990))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 2, 30, 666, 777, -10000, 123456789, 432, -1000))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 2, 30, 666, 777, -10000, 123456789, 432, -1000))),
			s.countNums(new ArrayList<>(Arrays.asList(-4443, 147483646, 147483646, -123456790, -123456789, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-4443, 147483646, 147483646, -123456790, -123456789, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(5, -147483646, 5, 147483646, -147483646, 147483646, -147483646, -147483646, 5))) == s2.countNums(new ArrayList<>(Arrays.asList(5, -147483646, 5, 147483646, -147483646, 147483646, -147483646, -147483646, 5))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -199, 665, -9))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -199, 665, -9))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 8, 8, 9, 10, 11, 12, 13, 14, 15, 15, 15, 17, 18, 19, 20, -199, -4444, -9, 15))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 8, 8, 9, 10, 11, 12, 13, 14, 15, 15, 15, 17, 18, 19, 20, -199, -4444, -9, 15))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 15, 147483646, 147483646, -147483646, 147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 15, 147483646, 147483646, -147483646, 147483646, -147483646)))
		);
		if (correct.contains(false)) {
			throw new AssertionError();
		}
	}
	public static void test14()  throws NoSuchAlgorithmException {
		Solution s = new Solution();
		SolutionGenerated s2 = new SolutionGenerated();
		List<Boolean> correct = Arrays.asList(
			s.countNums(new ArrayList<>(Arrays.asList(1, -147483646, 3, 4, 5, 6, 8, 8, 9, 10, 11, 12, 13, 14, 15, 15, 17, 18, 19, 20, -199, -99, -9, 15, 12))) == s2.countNums(new ArrayList<>(Arrays.asList(1, -147483646, 3, 4, 5, 6, 8, 8, 9, 10, 11, 12, 13, 14, 15, 15, 17, 18, 19, 20, -199, -99, -9, 15, 12))),
			s.countNums(new ArrayList<>(Arrays.asList(2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 123456789, 147483646, -123456789, -123456789, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 123456789, 147483646, -123456789, -123456789, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, -12, -123456790, -123456789, 123456789, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, -12, -123456790, -123456789, 123456789, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1))) == s2.countNums(new ArrayList<>(Arrays.asList(0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -7770, 4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -7770, 4444))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 6666, 13, -147483646, -147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 6666, 13, -147483646, -147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -99, -9, 17))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -99, -9, 17))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, 10, -4444, 16, 666, -77, 9, -7777, 88, 9, -4444, -4444, 666))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, 10, -4444, 16, 666, -77, 9, -7777, 88, 9, -4444, -4444, 666))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 1, 797, -45, -990, -1000, 100, 123, 10, 20, 2, 30, 666, 777, 123, 123456789, 432, -1000))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 1, 797, -45, -990, -1000, 100, 123, 10, 20, 2, 30, 666, 777, 123, 123456789, 432, -1000))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, 147483646, 147483646, -147483646, -147483646, -147483646, -147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, 147483646, 147483646, -147483646, -147483646, -147483646, -147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, 1111, -123456, 147483646, -4443, -987654, -123457, 11111, -22222, 3333, -4444, 555, 666, -77, -147483646, 0, 9, -4444, -4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, 1111, -123456, 147483646, -4443, -987654, -123457, 11111, -22222, 3333, -4444, 555, 666, -77, -147483646, 0, 9, -4444, -4444))),
			s.countNums(new ArrayList<>(Arrays.asList(6660, -147483646, 147483646, 147483646, -123456789, -123456789, 123456789, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(6660, -147483646, 147483646, 147483646, -123456789, -123456789, 123456789, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, 147483646, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, 9, -4444, -4444, 88))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, 147483646, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, 9, -4444, -4444, 88))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 30, 666, 777, -10000, 123456789, -11))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 30, 666, 777, -10000, 123456789, -11))),
			s.countNums(new ArrayList<>(Arrays.asList(100, 147483646, 123456789, 9999, 147483646, -123456789, -123456789, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(100, 147483646, 123456789, 9999, 147483646, -123456789, -123456789, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, -45, -990, -1000, 100, 432, 10, 20, 30, 666, 777, -10000, 123456789, 556, -990))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, -45, -990, -1000, 100, 432, 10, 20, 30, 666, 777, -10000, 123456789, 556, -990))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 8, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 797, 19, 20, -199, -99, -9))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 8, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 797, 19, 20, -199, -99, -9))),
			s.countNums(new ArrayList<>(Arrays.asList(6660, -147483646, 147483646, 147483646, -123456789, -123456789, 123456789, -12))) == s2.countNums(new ArrayList<>(Arrays.asList(6660, -147483646, 147483646, 147483646, -123456789, -123456789, 123456789, -12))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 4444))),
			s.countNums(new ArrayList<>(Arrays.asList(6660, -147483646, 147483646, 147483646, -123456789, 14, 123456789, -12))) == s2.countNums(new ArrayList<>(Arrays.asList(6660, -147483646, 147483646, 147483646, -123456789, 14, 123456789, -12))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, -147483646, 147483646, 123456789, 147483646, -123456789, -123456789, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, -147483646, 147483646, 123456789, 147483646, -123456789, -123456789, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(6660, -147483646, 147483646, 147483646, -123456789, -123456789, 123456789, -12))) == s2.countNums(new ArrayList<>(Arrays.asList(6660, -147483646, 147483646, 147483646, -123456789, -123456789, 123456789, -12))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 147483646, -123456789, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 147483646, -123456789, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(2222, -3333, 4444, -5555, -12, -7777, 13, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 4440, 2220, 6660, -7770, 8880, -9990, 8888, -3333))) == s2.countNums(new ArrayList<>(Arrays.asList(2222, -3333, 4444, -5555, -12, -7777, 13, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 4440, 2220, 6660, -7770, 8880, -9990, 8888, -3333))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, 147483646, -147483646, 2222, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, 147483646, -147483646, 2222, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -7771, 8880, -9990, 8888))) == s2.countNums(new ArrayList<>(Arrays.asList(2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -7771, 8880, -9990, 8888))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, -999, -147483646, 999, -9999, 9999, -99999, 99999, -1111111, -99))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, -999, -147483646, 999, -9999, 9999, -99999, 99999, -1111111, -99))),
			s.countNums(new ArrayList<>(Arrays.asList(-9999, 2222, -3333, 4444, -5555, -12, -7777, 13, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 4440, 2220, 6660, -7770, 8880, -9990, 8888))) == s2.countNums(new ArrayList<>(Arrays.asList(-9999, 2222, -3333, 4444, -5555, -12, -7777, 13, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 4440, 2220, 6660, -7770, 8880, -9990, 8888))),
			s.countNums(new ArrayList<>(Arrays.asList(6660, -147483646, 147483646, 147483646, -123456789, -123456789, 123456789, 147483646, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(6660, -147483646, 147483646, 147483646, -123456789, -123456789, 123456789, 147483646, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 3, 20, -199, -9, -9, 14))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 3, 20, -199, -9, -9, 14))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9, -9))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9, -9))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9, 20))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9, 20))),
			s.countNums(new ArrayList<>(Arrays.asList(-9999, 2222, -3333, 4444, -5555, -12, -7777, -999, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888))) == s2.countNums(new ArrayList<>(Arrays.asList(-9999, 2222, -3333, 4444, -5555, -12, -7777, -999, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, -12, 665, -77, 88, 9, -4444, -4444, 11111, -4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, -12, 665, -77, 88, 9, -4444, -4444, 11111, -4444))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, 4440, -5550, -7770, 8880, -5554, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, 4440, -5550, -7770, 8880, -5554, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -7771, 8880, 8888))) == s2.countNums(new ArrayList<>(Arrays.asList(2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -7771, 8880, 8888))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, 147483646, 14, 147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, 147483646, 14, 147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3334, 4444, -5555, -7777, 8888, -9999, 1110, 2220, 4440, -5550, -7770, 8880, -5554, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3334, 4444, -5555, -7777, 8888, -9999, 1110, 2220, 4440, -5550, -7770, 8880, -5554, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -3333))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -3333))),
			s.countNums(new ArrayList<>(Arrays.asList(-10000, 2, 3, 4, 5, 6, 7, 8, -9999, -99, 99, 999, -9999, 9999, -99999, 99999, -1111111))) == s2.countNums(new ArrayList<>(Arrays.asList(-10000, 2, 3, 4, 5, 6, 7, 8, -9999, -99, 99, 999, -9999, 9999, -99999, 99999, -1111111))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 123456789, -123456789, -123456789, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 123456789, -123456789, -123456789, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, 8888, -9999, 1110, -5551, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, 8888, -9999, 1110, -5551, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 4444))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, -5555, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -9, 99, 14, 10))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, -5555, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -9, 99, 14, 10))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, -12, -123456788, -123456789, -123456789, 123456789, 147483646, -12))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, -12, -123456788, -123456789, -123456789, 123456789, 147483646, -12))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -7777, 8888, -9999, 1110, -7776, 2220, 147483646, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -7777, 8888, -9999, 1110, -7776, 2220, 147483646, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 797, -45, -990, -1000, 100, 123, 10, 20, 30, 666, 777, -10000, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 797, -45, -990, -1000, 100, 123, 10, 20, 30, 666, 777, -10000, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, -123456790, 432, 10, 20, 30, 666, 777, -10000, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, -123456790, 432, 10, 20, 30, 666, 777, -10000, 123456789)))
		);
		if (correct.contains(false)) {
			throw new AssertionError();
		}
	}
	public static void test15()  throws NoSuchAlgorithmException {
		Solution s = new Solution();
		SolutionGenerated s2 = new SolutionGenerated();
		List<Boolean> correct = Arrays.asList(
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, -999, 18, 19, 20, -199, -99, -9, -9))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, -999, 18, 19, 20, -199, -99, -9, -9))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, -147483646, 797, -45, -990, -1000, 100, 123, -123456790, 432, 10, 20, 30, 666, 777, -10000, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, -147483646, 797, -45, -990, -1000, 100, 123, -123456790, 432, 10, 20, 30, 666, 777, -10000, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(-9999, 2222, -3333, 2223, 4444, -5555, -12, -7777, 13, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 4440, -5550, 2220, 6660, -4444, 8880, -9990, 8888, 2222))) == s2.countNums(new ArrayList<>(Arrays.asList(-9999, 2222, -3333, 2223, 4444, -5555, -12, -7777, 13, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 4440, -5550, 2220, 6660, -4444, 8880, -9990, 8888, 2222))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, 8880, -9990, -3333))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, 8880, -9990, -3333))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 9, 88, 9, -4444, -4444, 11111, 666))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 9, 88, 9, -4444, -4444, 11111, 666))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 13, -147483646, 1110, 147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 13, -147483646, 1110, 147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, -9990, 147483646, 147483646, -147483646, 147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, -9990, 147483646, 147483646, -147483646, 147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 9, 88, 9, -4444, -4444, 11111, 666, 555, 9))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 9, 88, 9, -4444, -4444, 11111, 666, 555, 9))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 0, 147483646, 123456789, 147483646, -123456789, -123456789, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 0, 147483646, 123456789, 147483646, -123456789, -123456789, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, -5555, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 13, 18, 19, 20, -199, -9, 14))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, -5555, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 13, 18, 19, 20, -199, -9, 14))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, -147483646, 147483646, -147483646, 147483646, -147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, -147483646, 147483646, -147483646, 147483646, -147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -199, -99, -9, 13))) == s2.countNums(new ArrayList<>(Arrays.asList(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -199, -99, -9, 13))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, 555, 665, -77, 88, 9, -4444, -4444, 9))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, 555, 665, -77, 88, 9, -4444, -4444, 9))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, -123456, 0, 147483646, 123456789, 147483646, -123456789, -123456789, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, -123456, 0, 147483646, 123456789, 147483646, -123456789, -123456789, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, 1000000, 555, 666, -77, 9, 88, 9, -4444, -4444, 11111, 666))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, 1000000, 555, 666, -77, 9, 88, 9, -4444, -4444, 11111, 666))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -147483646, 8880, -9990, 8888))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -147483646, 8880, -9990, 8888))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, -123456790, 147483646, 147483646, -147483646, 147483646, -147483646, -147483646, -147483646, 147483646, 147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, -123456790, 147483646, 147483646, -147483646, 147483646, -147483646, -147483646, -147483646, 147483646, 147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, -123456790, 147483646, 147483646, -147483646, 147483646, -147483646, -147483646, -147483646, 147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, -123456790, 147483646, 147483646, -147483646, 147483646, -147483646, -147483646, -147483646, 147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1110, 2222, -3334, 4444, -5555, -7777, 8888, -9999, 1110, 2220, 4440, -5550, -7770, 8880, -5554, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1110, 2222, -3334, 4444, -5555, -7777, 8888, -9999, 1110, 2220, 4440, -5550, -7770, 8880, -5554, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 9, 88, 9, -4444, -987654, -4444, -987654, -987654))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 9, 88, 9, -4444, -987654, -4444, -987654, -987654))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, 5, 147483646, -147483646, 147483646, -147483646, -147483646, 9))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, 5, 147483646, -147483646, 147483646, -147483646, -147483646, 9))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 88, 4, 5, 16, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -199, 665, -9, 19))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 88, 4, 5, 16, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -199, 665, -9, 19))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, -147483646, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, -147483646, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 15, 147483646, 147483646, -147483646, 147483646, -147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 15, 147483646, 147483646, -147483646, 147483646, -147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, -147483646, 797, -45, -990, -1000, 100, 123, -123456790, 432, 10, 20, 123, 30, 666, 777, -10000, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, -147483646, 797, -45, -990, -1000, 100, 123, -123456790, 432, 10, 20, 123, 30, 666, 777, -10000, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(0, 0, 0, 0, 0, 0, 0, 0, 0))) == s2.countNums(new ArrayList<>(Arrays.asList(0, 0, 0, 0, 0, 0, 0, 0, 0))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 123456789, 147483646, -123456789, -123456789, 123456789, -123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 123456789, 147483646, -123456789, -123456789, 123456789, -123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 4444, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9, -199))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 4444, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9, -199))),
			s.countNums(new ArrayList<>(Arrays.asList(2222, -3333, 4444, -5555, -12, -7777, 13, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888, -7777, 6660))) == s2.countNums(new ArrayList<>(Arrays.asList(2222, -3333, 4444, -5555, -12, -7777, 13, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888, -7777, 6660))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, -999, 18, 19, 20, -199, -99, -9, -9, 19))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, -999, 18, 19, 20, -199, -99, -9, -9, 19))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -11, -7777, 8888, -9999, 1110, -7776, -99999, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 8888, -9990, 2222, -99999))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -11, -7777, 8888, -9999, 1110, -7776, -99999, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 8888, -9990, 2222, -99999))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 30, 147483646, 147483646, 147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 30, 147483646, 147483646, 147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, -999, -999, -147483646, 999, -9999, 9999, -99999, 99999, -1111111, -99, 1))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, -999, -999, -147483646, 999, -9999, 9999, -99999, 99999, -1111111, -99, 1))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 147483646, 4, 5, 6, 7, 8, 18, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 17, 20, -199, -99, -9, 14))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 147483646, 4, 5, 6, 7, 8, 18, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 17, 20, -199, -99, -9, 14))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, -5555, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 13, 18, 19, 20, -199, -9))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, -5555, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 13, 18, 19, 20, -199, -9))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, -5555, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -9, -9, 14, 17))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, -5555, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -9, -9, 14, 17))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 8, -4444, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 797, 20, -199, -99, -9, 3))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 8, -4444, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 797, 20, -199, -99, -9, 3))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 15, 147483646, -147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 15, 147483646, -147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -7771, 8880, -9990, 8888, 2222))) == s2.countNums(new ArrayList<>(Arrays.asList(2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -7771, 8880, -9990, 8888, 2222))),
			s.countNums(new ArrayList<>(Arrays.asList(0, 0, 0, 0, 147483646, 0, 0, 0, 0))) == s2.countNums(new ArrayList<>(Arrays.asList(0, 0, 0, 0, 147483646, 0, 0, 0, 0))),
			s.countNums(new ArrayList<>(Arrays.asList(-10000, 2, -1, 3, 4, 5, 6, 7, 8, -9999, -99, 99, 999, -9999, 9999, -99999, 99999, -1111111))) == s2.countNums(new ArrayList<>(Arrays.asList(-10000, 2, -1, 3, 4, 5, 6, 7, 8, -9999, -99, 99, 999, -9999, 9999, -99999, 99999, -1111111))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, 10, -4444, 555, 16, 666, -77, 9, -7777, 88, 9, -4444, -4444, -4444, 10))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, 10, -4444, 555, 16, 666, -77, 9, -7777, 88, 9, -4444, -4444, -4444, 10))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -3330))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -3330))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, -123456, 0, 147483646, 123456789, 147483646, -123456789, -123456789, 123456789, -123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, -123456, 0, 147483646, 123456789, 147483646, -123456789, -123456789, 123456789, -123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 123456789, -123456789, -123456789, 123456789, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 123456789, -123456789, -123456789, 123456789, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(-9999, 2222, -3333, 2223, 4444, -5555, -12, -7777, 13, 8887, -9999, 1110, -7776, -7769, 2220, -3330, 4440, -5550, 2220, 6660, -4444, 8880, -9990, 8888, 2222, -4444))) == s2.countNums(new ArrayList<>(Arrays.asList(-9999, 2222, -3333, 2223, 4444, -5555, -12, -7777, 13, 8887, -9999, 1110, -7776, -7769, 2220, -3330, 4440, -5550, 2220, 6660, -4444, 8880, -9990, 8888, 2222, -4444))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, -147483646, 797, -45, -990, -1000, 100, 123, -123456790, 10, 20, 30, 666, 777, -10000, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, -147483646, 797, -45, -990, -1000, 100, 123, -123456790, 10, 20, 30, 666, 777, -10000, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(-4443, 147483646, 147483646, -123456790, -123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-4443, 147483646, 147483646, -123456790, -123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(1110, 2222, -3334, 4444, -7777, 8888, -9999, 2220, 4440, -5550, -7770, 8880, -5554, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1110, 2222, -3334, 4444, -7777, 8888, -9999, 2220, 4440, -5550, -7770, 8880, -5554, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, -10000, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, -10000, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888)))
		);
		if (correct.contains(false)) {
			throw new AssertionError();
		}
	}
	public static void test16()  throws NoSuchAlgorithmException {
		Solution s = new Solution();
		SolutionGenerated s2 = new SolutionGenerated();
		List<Boolean> correct = Arrays.asList(
			s.countNums(new ArrayList<>(Arrays.asList(0, 0, 0, 0, 0, 0, 0))) == s2.countNums(new ArrayList<>(Arrays.asList(0, 0, 0, 0, 0, 0, 0))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 123456789, 147483646, -123456789, -123456789, 123456789, -123456789, -5555))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 123456789, 147483646, -123456789, -123456789, 123456789, -123456789, -5555))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, -45, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -199, -99, -9))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, -45, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -199, -99, -9))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 13, -147483646, 147483646, 1110, 147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 13, -147483646, 147483646, 1110, 147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1))) == s2.countNums(new ArrayList<>(Arrays.asList(0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, -10000, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -3333, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, -10000, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -3333, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, -123456790, 432, 20, 30, -11, 666, 777, -10000, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, -123456790, 432, 20, 30, -11, 666, 777, -10000, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 8, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -99, -9, 17, 8, 1))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 8, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -99, -9, 17, 8, 1))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 10, -4444, 555, 16, 666, -77, 9, -7777, 88, 9, -4444, -4444, -4444, 10))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 10, -4444, 555, 16, 666, -77, 9, -7777, 88, 9, -4444, -4444, -4444, 10))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, 4444, -5555, -11, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 8888, -9990, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, 4444, -5555, -11, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 8888, -9990, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 15, 147483646, -147483646, 1, 147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 15, 147483646, -147483646, 1, 147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(6660, -147483646, 147483646, 147483646, -123456789, -123456789, 123456789, 6661, -12))) == s2.countNums(new ArrayList<>(Arrays.asList(6660, -147483646, 147483646, 147483646, -123456789, -123456789, 123456789, 6661, -12))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 123456789, -147483646, -11, -123456789, -123456789, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 123456789, -147483646, -11, -123456789, -123456789, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, -999, -999, -147483646, 999, -9999, 9999, -99999, 9998, 99999, -1111111, -99, 1))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, -999, -999, -147483646, 999, -9999, 9999, -99999, 9998, 99999, -1111111, -99, 1))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 147483646, -123456789, -123456789, 123456789, -12))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 147483646, -123456789, -123456789, 123456789, -12))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, -123456789, 123456789, -123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, -123456789, 123456789, -123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 147483646, 4, 5, 6, -147483646, 7, 8, 18, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 17, 20, -199, -99, -9, 14))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 147483646, 4, 5, 6, -147483646, 7, 8, 18, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 17, 20, -199, -99, -9, 14))),
			s.countNums(new ArrayList<>(Arrays.asList(2222, 4444, -5555, -11, -7777, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 8888, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(2222, 4444, -5555, -11, -7777, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 8888, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 8, 8, 147483646, 10, 11, 12, 13, 14, 15, 15, 17, 18, 19, 20, -199, -99, -9, 15))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 8, 8, 147483646, 10, 11, 12, 13, 14, 15, 15, 17, 18, 19, 20, -199, -99, -9, 15))),
			s.countNums(new ArrayList<>(Arrays.asList(666, 147483646, 147483646, 13, -147483646, 147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(666, 147483646, 147483646, 13, -147483646, 147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 88, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -199, 665, -9, 19))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 88, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -199, 665, -9, 19))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -123456790, 147483646, -147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -123456790, 147483646, -147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(0, 0, 0, 0, 0, 0, 0, 0, 1))) == s2.countNums(new ArrayList<>(Arrays.asList(0, 0, 0, 0, 0, 0, 0, 0, 1))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, -147483646, 797, -990, -1000, 100, 123, -123456790, 432, 10, 20, 123, 30, 666, 777, -10000, 123456789, -123456790))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, -147483646, 797, -990, -1000, 100, 123, -123456790, 432, 10, 20, 123, 30, 666, 777, -10000, 123456789, -123456790))),
			s.countNums(new ArrayList<>(Arrays.asList(0, 0, 0, 0, -147483646, 0, 0, 0, 0, 1, 1))) == s2.countNums(new ArrayList<>(Arrays.asList(0, 0, 0, 0, -147483646, 0, 0, 0, 0, 1, 1))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 15, 147483646, -147483646, 1, 147483646, 147483646, -147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 15, 147483646, -147483646, 1, 147483646, 147483646, -147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, 4444, -5555, -7777, -7770, -5550, 8888, -9999, 1110, 2220, -3330, 4440, -5550, -22222, 6660, -7770, 8880, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, 4444, -5555, -7777, -7770, -5550, 8888, -9999, 1110, 2220, -3330, 4440, -5550, -22222, 6660, -7770, 8880, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, -5555, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 13, 18, 19, 20, -199, -9, 10))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, -5555, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 13, 18, 19, 20, -199, -9, 10))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 10, -4444, -147483646, 16, 666, -77, 9, -7777, 88, 9, -4444, -4444, -4444, 10))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 10, -4444, -147483646, 16, 666, -77, 9, -7777, 88, 9, -4444, -4444, -4444, 10))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 147483646, 147483646, -123456790, -123456789, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 147483646, 147483646, -123456790, -123456789, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 7, 147483646, -147483646, 147483646, -147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 7, 147483646, -147483646, 147483646, -147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, 11111, -22222, 3333, -4444, 555, 665, -77, 88, 9, -4444, -4444, 9))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, 11111, -22222, 3333, -4444, 555, 665, -77, 88, 9, -4444, -4444, 9))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9, 17))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9, 17))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, 147483646, -147483646, 2222, 147483646, 2222))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, 147483646, -147483646, 2222, 147483646, 2222))),
			s.countNums(new ArrayList<>(Arrays.asList(-9999, 2222, -3333, 4444, -5555, -12, -7777, 13, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 4440, 2220, 6660, -13, -7770, 8880, -9990, 8888))) == s2.countNums(new ArrayList<>(Arrays.asList(-9999, 2222, -3333, 4444, -5555, -12, -7777, 13, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 4440, 2220, 6660, -13, -7770, 8880, -9990, 8888))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 123, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9, -199))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 123, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9, -199))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 6, 7, 8, 9, -99, 99, -999, -999, -147483646, 999, -9999, 9999, -99999, 9998, 99999, -1111111, -99, 1))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 6, 7, 8, 9, -99, 99, -999, -999, -147483646, 999, -9999, 9999, -99999, 9998, 99999, -1111111, -99, 1))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 123456789, -123456789, 8888, -123456789, 123456789, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 123456789, -123456789, 8888, -123456789, 123456789, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -22222, -7770, 8880, -9990, -7770, 4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -22222, -7770, 8880, -9990, -7770, 4444))),
			s.countNums(new ArrayList<>(Arrays.asList(5, 5, 147483646, -147483646, 147483646, -147483646, -147483646, 5))) == s2.countNums(new ArrayList<>(Arrays.asList(5, 5, 147483646, -147483646, 147483646, -147483646, -147483646, 5))),
			s.countNums(new ArrayList<>(Arrays.asList(6660, -147483646, 147483646, -123456789, -123456789, 123456789, -12))) == s2.countNums(new ArrayList<>(Arrays.asList(6660, -147483646, 147483646, -123456789, -123456789, 123456789, -12))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, -5555, 3, 4, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -9, 99, 14, 10))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, -5555, 3, 4, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -9, 99, 14, 10))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 147483646, 147483646, -123456790, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 147483646, 147483646, -123456790, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -22222, -7770, 8880, -9990, -7770, 4444, 2220))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -22222, -7770, 8880, -9990, -7770, 4444, 2220))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 797, -45, -990, -1000, 100, 123, 10, 20, 30, 666, 777, -10000, 10))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 797, -45, -990, -1000, 100, 123, 10, 20, 30, 666, 777, -10000, 10))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 8, -4444, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 797, 20, -99, -9, 3))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 8, -4444, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 797, 20, -99, -9, 3))),
			s.countNums(new ArrayList<>(Arrays.asList(2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555))) == s2.countNums(new ArrayList<>(Arrays.asList(2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 3, 20, -199, -9, -9, 14))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 3, 20, -199, -9, -9, 14)))
		);
		if (correct.contains(false)) {
			throw new AssertionError();
		}
	}
	public static void test17()  throws NoSuchAlgorithmException {
		Solution s = new Solution();
		SolutionGenerated s2 = new SolutionGenerated();
		List<Boolean> correct = Arrays.asList(
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 8, -4444, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 797, 20, -99, -9, 3, 16, 9))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 8, -4444, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 797, 20, -99, -9, 3, 16, 9))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 1109, 6660, -7770, 8880, -9990, 4440))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 1109, 6660, -7770, 8880, -9990, 4440))),
			s.countNums(new ArrayList<>(Arrays.asList(0, 0, 0, 0, 0, 0, 0, 0, 0, -13, 1, 1, 0))) == s2.countNums(new ArrayList<>(Arrays.asList(0, 0, 0, 0, 0, 0, 0, 0, 0, -13, 1, 1, 0))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -123456, -987654, 11111, -22222, 3333, 10, -4444, 16, 666, -77, 9, -7777, 88, -4444, -4444, 666))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -123456, -987654, 11111, -22222, 3333, 10, -4444, 16, 666, -77, 9, -7777, 88, -4444, -4444, 666))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, -7770, -5550, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, -7770, -5550, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, -123456790, 147483646, 147483646, 9999, 147483646, -147483646, -147483646, -147483646, 147483646, 147483646, -147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, -123456790, 147483646, 147483646, 9999, 147483646, -147483646, -147483646, -147483646, 147483646, 147483646, -147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, 147483646, 0, -123456789, 123456789, 0, -1))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, 147483646, 0, -123456789, 123456789, 0, -1))),
			s.countNums(new ArrayList<>(Arrays.asList(2222, -3333, 4444, -5555, -12, -7776, 13, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 2220, 6660, -7770, 8880, -9990, 8888, -3333))) == s2.countNums(new ArrayList<>(Arrays.asList(2222, -3333, 4444, -5555, -12, -7776, 13, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 2220, 6660, -7770, 8880, -9990, 8888, -3333))),
			s.countNums(new ArrayList<>(Arrays.asList(5, -147483646, 147483646, 5, 147483646, -147483646, 147483646, -147483646, 6660, 5))) == s2.countNums(new ArrayList<>(Arrays.asList(5, -147483646, 147483646, 5, 147483646, -147483646, 147483646, -147483646, 6660, 5))),
			s.countNums(new ArrayList<>(Arrays.asList(-9999, -12, 2222, -3333, 4444, -5555, -12, -7777, -999, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 555))) == s2.countNums(new ArrayList<>(Arrays.asList(-9999, -12, 2222, -3333, 4444, -5555, -12, -7777, -999, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 555))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, -4444, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, -4444, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 123456789, -123456789, 123456789, -123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 123456789, -123456789, 123456789, -123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, -123456790, 8, 147483646, 147483646, -147483646, 147483646, -147483646, -147483646, 147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, -123456790, 8, 147483646, 147483646, -147483646, 147483646, -147483646, -147483646, 147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 8, -4444, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 797, 20, -199, -99, -9, 3, -199, -123456788, 16))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 8, -4444, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 797, 20, -199, -99, -9, 3, -199, -123456788, 16))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 123, 7, 8, 9, -7769, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9, -199))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 123, 7, 8, 9, -7769, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9, -199))),
			s.countNums(new ArrayList<>(Arrays.asList(-10000, 2, 4, 5, 6, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999))) == s2.countNums(new ArrayList<>(Arrays.asList(-10000, 2, 4, 5, 6, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 14, -123456789, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 14, -123456789, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 1, -123456789, -123456789, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 1, -123456789, -123456789, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, -123456790, 147483646, 147483646, 9999, 147483646, -147483646, -147483646, -147483646, 147483646, 147483646, -147483646, 147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, -123456790, 147483646, 147483646, 9999, 147483646, -147483646, -147483646, -147483646, 147483646, 147483646, -147483646, 147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -3333, 6660))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -3333, 6660))),
			s.countNums(new ArrayList<>(Arrays.asList(5, -147483646, 147483646, 147483646, 5, 147483646, -147483646, 147483646, -147483646, 6660, 5))) == s2.countNums(new ArrayList<>(Arrays.asList(5, -147483646, 147483646, 147483646, 5, 147483646, -147483646, 147483646, -147483646, 6660, 5))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, 147483646, -147483646, 147483646, -147483646, -147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, 147483646, -147483646, 147483646, -147483646, -147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-3333, 4444, -5555, -12, -7777, 13, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 4440, 2220, 6660, -7770, 8880, -9990, 8888, -3333))) == s2.countNums(new ArrayList<>(Arrays.asList(-3333, 4444, -5555, -12, -7777, 13, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 4440, 2220, 6660, -7770, 8880, -9990, 8888, -3333))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, 1000000, 555, 666, -77, 9, 88, 9, -4444, -4444, 11111, 666, -22222))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, 1000000, 555, 666, -77, 9, 88, 9, -4444, -4444, 11111, 666, -22222))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 13, -147483646, 147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 13, -147483646, 147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-999, 1, 2, 3, 4, 5, 6, 8, 9, -99, 99, -3333, -999, 999, -9999, 9999, -99999, 99999, -1111111))) == s2.countNums(new ArrayList<>(Arrays.asList(-999, 1, 2, 3, 4, 5, 6, 8, 9, -99, 99, -3333, -999, 999, -9999, 9999, -99999, 99999, -1111111))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 8, 8, 147483646, 10, 11, 12, 13, 14, 12, 15, 15, 17, 18, 19, 20, -199, -99, -9, 15))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 8, 8, 147483646, 10, 11, 12, 13, 14, 12, 15, 15, 17, 18, 19, 20, -199, -99, -9, 15))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, 4444, -5555, -11, -7777, 8888, -4443, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 8888, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, 4444, -5555, -11, -7777, 8888, -4443, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 8888, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, -123456790, 8, 147483646, 147483646, -147483646, 147483646, -147483646, -147483646, 147483646, 147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, -123456790, 8, 147483646, 147483646, -147483646, 147483646, -147483646, -147483646, 147483646, 147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, -123456790, 147483646, 147483646, 9999, 147483646, -147483646, -147483646, 147483646, 147483646, -147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, -123456790, 147483646, 147483646, 9999, 147483646, -147483646, -147483646, 147483646, 147483646, -147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 147483646, -123456789, -123456789, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 147483646, -123456789, -123456789, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, 4440, -5550, -7770, 8880, -9990, -147483646, 2220))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, 4440, -5550, -7770, 8880, -9990, -147483646, 2220))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 3333, -123456789, 123456789, -123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 3333, -123456789, 123456789, -123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, -99, -9, 17))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, -99, -9, 17))),
			s.countNums(new ArrayList<>(Arrays.asList(-9999, 2222, -3333, 4444, -5555, -12, -7777, 13, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 4440, 2220, 6660, -7777, 8880, -9990, 8888))) == s2.countNums(new ArrayList<>(Arrays.asList(-9999, 2222, -3333, 4444, -5555, -12, -7777, 13, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 4440, 2220, 6660, -7777, 8880, -9990, 8888))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, 1111, -123456, 147483646, -4443, -987654, -123457, 11111, -22222, 3333, -4444, 555, 666, -77, -147483646, 0, 9, -4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, 1111, -123456, 147483646, -4443, -987654, -123457, 11111, -22222, 3333, -4444, 555, 666, -77, -147483646, 0, 9, -4444))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, -123456789, 123456789, -123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, -123456789, 123456789, -123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(6660, -147483646, 147483646, 6659, 147483646, -123456789, -123456789, 123456789, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(6660, -147483646, 147483646, 6659, 147483646, -123456789, -123456789, 123456789, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 11, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 11, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, -7770, -5550, 8889, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, -7770, -5550, 8889, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -9, -9, 14))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -9, -9, 14))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 7, -147483646, 147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 7, -147483646, 147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, -3333, 11111, -22222, 3333, -4444, 555, -12, 665, -77, 88, 9, -4444, -4444, 11111))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, -3333, 11111, -22222, 3333, -4444, 555, -12, 665, -77, 88, 9, -4444, -4444, 11111))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 14, -147483646, -123456789, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 14, -147483646, -123456789, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 13, -147483646, 147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 13, -147483646, 147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, -3333, 4444, -5555, -7777, 8889, -9999, 1110, 2220, -3330, 4440, -5550, -7770, 8880, -9990, 8889))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, -3333, 4444, -5555, -7777, 8889, -9999, 1110, 2220, -3330, 4440, -5550, -7770, 8880, -9990, 8889))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 123, 7, 8, -7769, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9, -199))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 123, 7, 8, -7769, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9, -199))),
			s.countNums(new ArrayList<>(Arrays.asList(-9999, 2222, -3333, 4444, -5555, -12, -7777, 13, 8888, -9999, 556, 1110, -7776, -7769, 2220, -3330, 4440, 2220, 6660, -13, -7770, 8880, -9990, 8888))) == s2.countNums(new ArrayList<>(Arrays.asList(-9999, 2222, -3333, 4444, -5555, -12, -7777, 13, 8888, -9999, 556, 1110, -7776, -7769, 2220, -3330, 4440, 2220, 6660, -13, -7770, 8880, -9990, 8888))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, 555, -45, -990, -1000, 100, 432, 10, 20, 30, 666, 777, -10000, 123456789, 556, -990))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, 555, -45, -990, -1000, 100, 432, 10, 20, 30, 666, 777, -10000, 123456789, 556, -990)))
		);
		if (correct.contains(false)) {
			throw new AssertionError();
		}
	}
	public static void test18()  throws NoSuchAlgorithmException {
		Solution s = new Solution();
		SolutionGenerated s2 = new SolutionGenerated();
		List<Boolean> correct = Arrays.asList(
			s.countNums(new ArrayList<>(Arrays.asList(1, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, -199, -9, -9, 14))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, -199, -9, -9, 14))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, -7770, -5550, 8888, -9999, 1110, 2220, -3330, 4440, 147483646, -5550, 6660, -7770))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, -7770, -5550, 8888, -9999, 1110, 2220, -3330, 4440, 147483646, -5550, 6660, -7770))),
			s.countNums(new ArrayList<>(Arrays.asList(-9999, -12, 2222, -3333, 4444, 8881, -5555, -12, -7777, -999, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 555, 8888))) == s2.countNums(new ArrayList<>(Arrays.asList(-9999, -12, 2222, -3333, 4444, 8881, -5555, -12, -7777, -999, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 555, 8888))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, -77, -99, 99, -999, -147483646, 999, -9999, 9999, -99999, 99999, -1111111, -99))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, -77, -99, 99, -999, -147483646, 999, -9999, 9999, -99999, 99999, -1111111, -99))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, 147483646, -147483646, 147483646, -147483646, -147483646, -147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, 147483646, -147483646, 147483646, -147483646, -147483646, -147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-123456789, 100, 147483646, 9999, 147483646, -123456789, -147483646, -123456789, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(-123456789, 100, 147483646, 9999, 147483646, -123456789, -147483646, -123456789, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, -12, -123456788, -123456789, 123456789, 147483646, -12))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, -12, -123456788, -123456789, 123456789, 147483646, -12))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(8, 147483646, 7, 147483646, 147483646, -147483646, 147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(8, 147483646, 7, 147483646, 147483646, -147483646, 147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -11, -7777, 8888, 1110, -7776, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 8888, -9990, -3333))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -11, -7777, 8888, 1110, -7776, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 8888, -9990, -3333))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 7, 8, 9, -99, 99, -999, -999, -147483646, 999, -9999, 9999, -99999, 9998, 123, -1111111, -99, 1))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 7, 8, 9, -99, 99, -999, -999, -147483646, 999, -9999, 9999, -99999, 9998, 123, -1111111, -99, 1))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 665, 88, 9, -4444, -4444, 9))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 665, 88, 9, -4444, -4444, 9))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, 8889, -147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, 8889, -147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-123456789, 147483646, -7770, 147483646, 9999, 147483646, -123456789, -147483646, -123456789, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(-123456789, 147483646, -7770, 147483646, 9999, 147483646, -123456789, -147483646, -123456789, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, -12, 665, -77, 88, 9, -4444, -4444, 11111, -888888))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, -12, 665, -77, 88, 9, -4444, -4444, 11111, -888888))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 665, -77, -77, 88, 9, -4444, -4444, 9))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 665, -77, -77, 88, 9, -4444, -4444, 9))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 123456789, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 123456789, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, -999, 18, 19, 20, -199, 8, -9, -8, 19))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, -999, 18, 19, 20, -199, 8, -9, -8, 19))),
			s.countNums(new ArrayList<>(Arrays.asList(2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -7771, 8880, -9990, 8888, 8888))) == s2.countNums(new ArrayList<>(Arrays.asList(2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -7771, 8880, -9990, 8888, 8888))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, -7770, -5550, 8888, -9999, 1110, 2220, -3330, 4440, 147483646, -5550, 6660, -7770, -3330))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, -7770, -5550, 8888, -9999, 1110, 2220, -3330, 4440, 147483646, -5550, 6660, -7770, -3330))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, -3333, 11111, -22222, 3333, -4444, 555, 99, 665, -77, 88, 9, -4444, -4444, 11111, -888888))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, -3333, 11111, -22222, 3333, -4444, 555, 99, 665, -77, 88, 9, -4444, -4444, 11111, -888888))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 9, 88, 9, -4444, -987654, -4444, -77))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 9, 88, 9, -4444, -987654, -4444, -77))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, -123456789, 123456788, -123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, -123456789, 123456788, -123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, -5555, 3, 4, 2, 5, 665, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -9, 99, 14, 10))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, -5555, 3, 4, 2, 5, 665, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -9, 99, 14, 10))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, -7770, 1109, 6660, -7770, 8880, -9990, 4440))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, -7770, 1109, 6660, -7770, 8880, -9990, 4440))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 123456789, -123456789, 123456789, -123456789, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 123456789, -123456789, 123456789, -123456789, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, -123456790, -147483646, 147483646, 147483646, -147483646, 147483646, -147483646, -147483646, -147483646, 147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, -123456790, -147483646, 147483646, 147483646, -147483646, 147483646, -147483646, -147483646, -147483646, 147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, -999, -147483646, 999, -9999, 9999, -99999, 99999, -1111111, -99, 1))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, -999, -147483646, 999, -9999, 9999, -99999, 99999, -1111111, -99, 1))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -4443, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, 9, -4444, -4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -4443, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, 9, -4444, -4444))),
			s.countNums(new ArrayList<>(Arrays.asList(0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0))) == s2.countNums(new ArrayList<>(Arrays.asList(0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0))),
			s.countNums(new ArrayList<>(Arrays.asList(-99999, 147483646, 147483646, 15, 147483646, 147483646, -147483646, 147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(-99999, 147483646, 147483646, 15, 147483646, 147483646, -147483646, 147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, -10000, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -3333, 2220, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, -10000, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -3333, 2220, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 2220))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 2220))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -11, -7776, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 8888, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -11, -7776, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 8888, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, 10, -4444, 555, 666, -77, 9, 88, 9, -4444, -4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, 10, -4444, 555, 666, -77, 9, 88, 9, -4444, -4444))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -7777, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -22222, -7770, 8880, -9990, -7770, 4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -7777, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -22222, -7770, 8880, -9990, -7770, 4444))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888, -9990, -9999))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888, -9990, -9999))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 6, 7, 8, 9, -99, 99, -999, -999, -147483646, 999, -9999, 1109, -99999, 9998, 99999, -1111111, -99, 1))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 6, 7, 8, 9, -99, 99, -999, -999, -147483646, 999, -9999, 1109, -99999, 9998, 99999, -1111111, -99, 1))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 8, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, -9999, 16, 17, 18, 19, 17, 20, -99, -9, 17, 8, 1, -9))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 8, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, -9999, 16, 17, 18, 19, 17, 20, -99, -9, 17, 8, 1, -9))),
			s.countNums(new ArrayList<>(Arrays.asList(16, -147483646, 14, -147483646, -123456789, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(16, -147483646, 14, -147483646, -123456789, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -9999, 1110, -5551, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 4444, -3333))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -9999, 1110, -5551, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 4444, -3333))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 15, 147483646, 147483646, 147483646, -147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 15, 147483646, 147483646, 147483646, -147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, 9, -4444, -4444, 88))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, 9, -4444, -4444, 88))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 123456789, 147483646, -123456789, -123456789, 123456789, 147483646, -123456789, -123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 123456789, 147483646, -123456789, -123456789, 123456789, 147483646, -123456789, -123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -3330, 4440))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -3330, 4440))),
			s.countNums(new ArrayList<>(Arrays.asList(-99, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, -123456, 17, 18, 19, 20, -199, -99, -9, -9, 7))) == s2.countNums(new ArrayList<>(Arrays.asList(-99, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, -123456, 17, 18, 19, 20, -199, -99, -9, -9, 7))),
			s.countNums(new ArrayList<>(Arrays.asList(-10000, 2, 4, 5, 6, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, 9999))) == s2.countNums(new ArrayList<>(Arrays.asList(-10000, 2, 4, 5, 6, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, 9999))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, 147483646, 11111, -22222, 3333, -4444, 555, 666, -77, 88, 9, -4444, -4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, 147483646, 11111, -22222, 3333, -4444, 555, 666, -77, 88, 9, -4444, -4444))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888889, -123456, 147483646, 11111, -22222, 3333, -4444, -76, 555, 666, 88, 9, -4444, -4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888889, -123456, 147483646, 11111, -22222, 3333, -4444, -76, 555, 666, 88, 9, -4444, -4444))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -22222, -7770, 8880, -7776, -9990, -7770, 4444, 2220, -22222))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -22222, -7770, 8880, -7776, -9990, -7770, 4444, 2220, -22222)))
		);
		if (correct.contains(false)) {
			throw new AssertionError();
		}
	}
	public static void test19()  throws NoSuchAlgorithmException {
		Solution s = new Solution();
		SolutionGenerated s2 = new SolutionGenerated();
		List<Boolean> correct = Arrays.asList(
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 15, -147483646, 147483646, 147483646, -147483646, 147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 15, -147483646, 147483646, 147483646, -147483646, 147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123455, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 9, 88, 9, -4444, -4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123455, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 9, 88, 9, -4444, -4444))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, -22222, -7770, 8880, -7776, -9990, -7770, 4444, 2220, -22222))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, -22222, -7770, 8880, -7776, -9990, -7770, 4444, 2220, -22222))),
			s.countNums(new ArrayList<>(Arrays.asList(-10000, 2, 3, 4, 5, 6, 7, 8, -9999, -99, 99, 999, -9999, -123457, -99999, 99999, -1111111))) == s2.countNums(new ArrayList<>(Arrays.asList(-10000, 2, 3, 4, 5, 6, 7, 8, -9999, -99, 99, 999, -9999, -123457, -99999, 99999, -1111111))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 1111, 15, 147483646, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 1111, 15, 147483646, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, -123456789, 147483646, -123456789, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, -123456789, 147483646, -123456789, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, 147483646, -147483646, 2222, 11, 147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, 147483646, -147483646, 2222, 11, 147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, 4443, -5550, 6660, 8880, -9990, -3333, 8880, 4444, 8880, 4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, 4443, -5550, 6660, 8880, -9990, -3333, 8880, 4444, 8880, 4444))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -11, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 8888, -9990, 4444, 6660))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -11, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 8888, -9990, 4444, 6660))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, 3333, -4444, 555, 665, -77, -77, 88, 9, -4444, -4444, 9))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, 3333, -4444, 555, 665, -77, -77, 88, 9, -4444, -4444, 9))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, -147483646, 797, -45, -990, 100, 123, -123456790, 432, 10, 20, 123, 30, 666, 777, -10000, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, -147483646, 797, -45, -990, 100, 123, -123456790, 432, 10, 20, 123, 30, 666, 777, -10000, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3334, 4444, -5555, -7777, 8888, -10000, 1110, 2220, 4440, -5550, -7770, 8880, -5554, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3334, 4444, -5555, -7777, 8888, -10000, 1110, 2220, 4440, -5550, -7770, 8880, -5554, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, 4444, -5555, -7777, -7770, -5550, 8888, -9999, 1110, 2220, -3330, 4440, -5550, -22222, 6660, -7770, 8880, -9990, 2220))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, 4444, -5555, -7777, -7770, -5550, 8888, -9999, 1110, 2220, -3330, 4440, -5550, -22222, 6660, -7770, 8880, -9990, 2220))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, -5555, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -9, -9, 14, 17, 2))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, -5555, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -9, -9, 14, 17, 2))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -7777, 8888, -9999, 1111, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -147483646, 8880, -9990, 8888))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -7777, 8888, -9999, 1111, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -147483646, 8880, -9990, 8888))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 15, 147483646, -147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 15, 147483646, -147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, -199, -9, -9, 14, -9))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, -199, -9, -9, 14, -9))),
			s.countNums(new ArrayList<>(Arrays.asList(0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0))) == s2.countNums(new ArrayList<>(Arrays.asList(0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 147483646, 2222, 4444, -5555, -7770, -5550, 8888, -9999, 1110, 2220, -3330, -5550, -22222, 6660, -7770, 8880, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 147483646, 2222, 4444, -5555, -7770, -5550, 8888, -9999, 1110, 2220, -3330, -5550, -22222, 6660, -7770, 8880, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, -4444, 11111, -22222, 3333, 10, -4444, 555, 16, 666, -77, 9, -7777, 88, 9, -4444, -4444))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, -4444, 11111, -22222, 3333, 10, -4444, 555, 16, 666, -77, 9, -7777, 88, 9, -4444, -4444))),
			s.countNums(new ArrayList<>(Arrays.asList(6660, -147483646, 147483646, 99, -123456789, -123456789, 123456789, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(6660, -147483646, 147483646, 99, -123456789, -123456789, 123456789, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(-199, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9, 20))) == s2.countNums(new ArrayList<>(Arrays.asList(-199, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9, 20))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -99, -9))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -99, -9))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, 8888, -9999, 1110, -5551, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 4444, -5550))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, 8888, -9999, 1110, -5551, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 4444, -5550))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, 14, 147483646, 147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 147483646, 147483646, 14, 147483646, 147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9, 20, 8))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9, 20, 8))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 9, 88, 9, -4444, -4444, 667, 11111, 666, 555, 9, 999999, -888888))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 9, 88, 9, -4444, -4444, 667, 11111, 666, 555, 9, 999999, -888888))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, -123456790, 432, 10, 20, 30, 666, 777, -10000, 123456789, -990))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, -123456790, 432, 10, 20, 30, 666, 777, -10000, 123456789, -990))),
			s.countNums(new ArrayList<>(Arrays.asList(6660, -147483646, 147483646, 147483646, -123456789, -99, -123456789, 123456789, 147483646, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(6660, -147483646, 147483646, 147483646, -123456789, -99, -123456789, 123456789, 147483646, 123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(100, -123456790, 147483646, 9999, 147483646, -123456789, -147483646, -123456789, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(100, -123456790, 147483646, 9999, 147483646, -123456789, -147483646, -123456789, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 10, 3, 4, 5, 123, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 18, 19, 20, -199, -99, -9, -9, -199))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 10, 3, 4, 5, 123, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 18, 19, 20, -199, -99, -9, -9, -199))),
			s.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, -123457, -77, 9, 88, 9, -4444, -4444, 667, 11111, 666, 555, 9, 999999, -888888))) == s2.countNums(new ArrayList<>(Arrays.asList(1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, -123457, -77, 9, 88, 9, -4444, -4444, 667, 11111, 666, 555, 9, 999999, -888888))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 3333, -99, -999, -147483646, 999, -9999, 9999, -99999, 99999, -1111111, -99))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 3333, -99, -999, -147483646, 999, -9999, 9999, -99999, 99999, -1111111, -99))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 5, 147483646, -147483646, 147483646, -147483646, -147483646, 5, -147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 5, 147483646, -147483646, 147483646, -147483646, -147483646, 5, -147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, -123456790, 147483646, 147483646, -147483646, 147483646, -147483646, -147483646, -147483646, -147483646, 147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, -123456790, 147483646, 147483646, -147483646, 147483646, -147483646, -147483646, -147483646, -147483646, 147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 147483646, -147483646, -147483646, -147483646, -147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 147483646, -147483646, -147483646, -147483646, -147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -99, -9, 17))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -99, -9, 17))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, 4444, -5555, -7777, -7770, -5550, 8888, -9999, 1110, 2220, -3330, 4440, -5550, -22222, 6660, -7770, 8880, -9990, 2220, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, 4444, -5555, -7777, -7770, -5550, 8888, -9999, 1110, 2220, -3330, 4440, -5550, -22222, 6660, -7770, 8880, -9990, 2220, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -22222, 147483646, 8880, -7776, -9990, -7770, 4444, 2220, -22222, 4440))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -22222, 147483646, 8880, -7776, -9990, -7770, 4444, 2220, -22222, 4440))),
			s.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 554, 797, -45, -990, -1000, 100, 123, -123456790, 432, 10, 20, 30, 666, 777, -10000, 123456789, -991, 797))) == s2.countNums(new ArrayList<>(Arrays.asList(-1, -10, 10, -11, -12, 554, 797, -45, -990, -1000, 100, 123, -123456790, 432, 10, 20, 30, 666, 777, -10000, 123456789, -991, 797))),
			s.countNums(new ArrayList<>(Arrays.asList(1110, 2222, -3334, 4444, -5555, -7777, 8888, -9999, 1110, 2220, 4440, -5550, -7770, 8881, -5554, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1110, 2222, -3334, 4444, -5555, -7777, 8888, -9999, 1110, 2220, 4440, -5550, -7770, 8881, -5554, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 11, 13, 14, 15, 16, 17, 18, 8881, 19, 20, -199, -99, 20, -9, -99))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 11, 13, 14, 15, 16, 17, 18, 8881, 19, 20, -199, -99, 20, -9, -99))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9, 20, -9))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9, 20, -9))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 1111, 3, 8, 5, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, -9999, 16, 18, 19, 17, 20, -99, -9, 17, 8, 1, -9))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 1111, 3, 8, 5, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, -9999, 16, 18, 19, 17, 20, -99, -9, 17, 8, 1, -9))),
			s.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 88, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 17, 20, -199, 665, -9, 19))) == s2.countNums(new ArrayList<>(Arrays.asList(1, 2, 3, 88, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 17, 20, -199, 665, -9, 19))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, 123456789, -123456789, 123456789, 12, -123456789, -123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, 123456789, -123456789, 123456789, 12, -123456789, -123456789))),
			s.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -11, -7776, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 8888, -7776, -9990))) == s2.countNums(new ArrayList<>(Arrays.asList(1111, 2222, -3333, 4444, -5555, -11, -7776, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 8888, -7776, -9990))),
			s.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, -123456790, 147483646, 147483646, 9999, 147483646, -147483646, -147483646, 147483646, 147483646, -147483646, 147483646, 147483646))) == s2.countNums(new ArrayList<>(Arrays.asList(147483646, -147483646, -123456790, 147483646, 147483646, 9999, 147483646, -147483646, -147483646, 147483646, 147483646, -147483646, 147483646, 147483646))),
			s.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 147483646, -123456789, 123456789))) == s2.countNums(new ArrayList<>(Arrays.asList(-147483646, 147483646, 147483646, -123456789, 123456789)))
		);
		if (correct.contains(false)) {
			throw new AssertionError();
		}
	}
	public static void main(String[] args) throws NoSuchAlgorithmException {
		test0();
		test1();
		test2();
		test3();
		test4();
		test5();
		test6();
		test7();
		test8();
		test9();
		test10();
		test11();
		test12();
		test13();
		test14();
		test15();
		test16();
		test17();
		test18();
		test19();
	}
}
